<?xml version="1.0"?>
<doc>
<assembly>
<name>
群坑分析
</name>
</assembly>
<members>
<member name="F:AME.GlobalApp_Form.GlobalApplication.F_main_App">
	<summary>
 用来索引用来保存全局数据的类实例
 </summary>
</member><member name="P:AME.GlobalApp_Form.GlobalApplication.Application">
	<summary>
 共享属性，用来索引用来保存全局数据的类实例
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.F_ExcelApplication_DB">
	<summary>
 整个程序中用来放置各种隐藏的Excel数据文档的Application对象
 </summary>
	<remarks></remarks>F:\基坑数据\程序编写\群坑分析\AME\MainForm_ProjectFile\GlobalApplication.vb

</member><member name="P:AME.GlobalApp_Form.GlobalApplication.ExcelApplication_DB">
	<summary>
 读取或设置整个程序中用来放置各种隐藏的Excel数据文档的Application对象
 </summary>
	<value></value>
	<returns>一个Excel.Application对象，用来装载整个程序中的所有隐藏的后台数据的Excel文档</returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.F_DateSpan">
	<summary>
 进行同步滚动的时间跨度，用来给出时间滚动条与日历的范围。
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.GlobalApplication.DateSpan">
	<summary>
 进行同步滚动的时间跨度，用来给出时间滚动条与日历的范围。
 这个全局的DateSpan值是只有扩充，不会缩减的。即在程序中每新添加一个图表，
 就会对其进行扩充，而将图表删除时，这个日期跨度值并不会缩减。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.F_ElevationDrawing">
	<summary>
 用来绘制剖面标高图的那一个Excel程序
 </summary>
 Excel程序界面  ---  标高剖面图

</member><member name="P:AME.GlobalApp_Form.GlobalApplication.ElevationDrawing">
	<summary>
 用来绘制剖面标高图的那一个Excel程序
 </summary>
</member><member name="P:AME.GlobalApp_Form.GlobalApplication.MonitorDrawingExcelApps">
	<summary>
 Excel程序界面  ---  集合  ---  监测曲线绘图
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.F_ProjectFileContents">
	<summary>
 程序中正在运行的那个项目文件
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.GlobalApplication.ProjectFile">
	<summary>
 程序中正在运行的那个项目文件
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.F_DataBase">
	<summary>
 主程序的数据库文件
 </summary>
</member><member name="P:AME.GlobalApp_Form.GlobalApplication.DataBase">
	<summary>
 主程序的数据库文件
 </summary>
	<remarks>用来加载所有Excel的数据文档，在整个过程中不可见，即在隐藏的状态下进行数据的交换与存储。</remarks>
</member><member name="P:AME.GlobalApp_Form.GlobalApplication.HasVisioPlanView">
	<summary>
 程序中是否打开Visio的平面图
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.GlobalApplication.ExposeAllDrawings">
	<summary>
 主程序中所有的绘图，包括不能进行滚动的图形。比如开挖平面图，监测曲线图，开挖剖面图。
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.GlobalApplication.ExposeRollingDrawings">
	<summary>
 提取出主程序中含有Rolling方法的对象
 </summary>
	<returns>其中的每一个元素都是一个字典，以对象名称来索引对象
 其中有三个元素，依次代表：剖面图、平面图和监测曲线图，
 它不是指从mainform中提取出来的三个App的属性值，而是从这三个App属性中挑选出来的，正确地带有Rolling方法的相关类的实例对象。
 </returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.blnTimeSpanInitialized">
	<summary>
 布尔值，用来指示主程序的时间跨度是否已被初始化。
 </summary>
	<remarks>在操作上，如果还没有被初始化，则以添加的形式进行初始化；
 如果已初始化，则是比较并扩展的形式进行初始化</remarks>
</member><member name="M:AME.GlobalApp_Form.GlobalApplication.refreshGlobalDateSpan(AME.Miscellaneous.DateSpan)">
	<summary>
 将主程序的TimeSpan属性与指定的TimeSpan值进行比较，并将主程序的TimeSpan扩展为二者的并集的大区间
 </summary>
	<param name="ComparedDateSpan">要与主程序的TimeSpan进行比较的TimeSpan值</param>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.GlobalApplication.Form_TreeView_MonitorPoints">
	<summary>
 绘制或删除测点在Visio中的对应形状。
 </summary>
	<remarks>一个Form对象，用来绘制或删除测点在Visio中的对应形状。</remarks>
</member><member name="M:AME.GlobalApp_Form.GlobalApplication.DrawingPointsInVisio">
	<summary>
 打开用于在Visio中绘制监测点位形状的对话框
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.GlobalApplication.DrawVisioPlanView">
	<summary>
 生成Visio的平面开挖图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.RollingEnabledDrawings.SectionalView">
	<summary>
 剖面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.RollingEnabledDrawings.PlanView">
	<summary>
 平面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.RollingEnabledDrawings.MonitorData">
	<summary>
 监测曲线图
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.RollingEnabledDrawings.Count">
	<summary>
 主程序中所有可以滚动的图表的数量
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.RollingEnabledDrawings.#ctor(System.Collections.Generic.List{AME.All_Drawings_In_Application.IRolling},System.Collections.Generic.List{AME.All_Drawings_In_Application.IRolling},System.Collections.Generic.List{AME.All_Drawings_In_Application.IRolling})">
	<summary>
 构造函数
 </summary>
	<param name="SectionalView">剖面图</param>
	<param name="PlanView">平面图</param>
	<param name="MonitorData">监测曲线图</param>
	<remarks></remarks>
</member><member name="T:AME.GlobalApp_Form.RollingEnabledDrawings">
	<summary>
 主程序中含有Rolling方法,而且可以正确地执行滚动方法的对象
 </summary>
	<remarks>其中的每一个元素都是一个字典，以对象名称来索引对象
 其中有三个元素，依次代表：剖面图、平面图和监测曲线图，
 它不是指从mainform中提取出来的三个App的属性值，而是从这三个App属性中挑选出来的，正确地带有Rolling方法的相关类的实例对象。</remarks>
</member><member name="F:AME.GlobalApp_Form.AmeDrawings.SectionalView">
	<summary>
 剖面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.AmeDrawings.PlanView">
	<summary>
 平面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.AmeDrawings.MonitorData">
	<summary>
 监测曲线图，其中的每一种监测曲线图的具体类型可以通过其Type属性来进行判断。
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.AmeDrawings.Count">
	<summary>
 主程序中所有图表的数量
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.AmeDrawings.#ctor(AME.All_Drawings_In_Application.ClsDrawing_Elevation,AME.All_Drawings_In_Application.ClsDrawing_PlanView,System.Collections.Generic.List{AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base})">
	<summary>
 构造函数
 </summary>
	<param name="SectionalView">剖面图</param>
	<param name="PlanView">平面图</param>
	<param name="MonitorData">监测曲线图</param>
	<remarks></remarks>
</member><member name="T:AME.GlobalApp_Form.AmeDrawings">
	<summary>
 主程序中所有的绘图，包括不能进行滚动的图形。比如开挖平面图，监测曲线图，开挖剖面图。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Others.F_arrBottomRightCorner">
	<summary>
 进行操作的工作表的UsedRange的右下角的行号与列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Others.F_dicDate_ChosenDatum">
	<summary>
 ！以每一天的日期来索引这一天的监测数据，监测数据只包含列表中选择了的监测点
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Others.F_AppDrawing">
	<summary>
 用来进行绘图的Excel程序
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Others.F_SelectedTags">
	<summary>
 在测点列表框中所选择的所有测点标签的数组，如{SW1,SW2,SW3}
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Others.F_RowNum_SelectedTags">
	<summary>
 在测点列表框中所选择的每一个测点在Excel工作表中所对应的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Others.F_TheFirstseriesTag">
	<summary>
 Chart中第一条监测曲线所对应的相关信息
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.btnGenerate_Click(System.Object,System.EventArgs)">
	<summary>
 生成监测曲线图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.BGW_Generate_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
	<summary>
 生成绘图，此方法是在后台的工作者线程中执行的。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.BGW_Generate_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
	<summary>
 当后台的工作者线程结束（即BGW_Generate_DoWork方法执行完毕）时触发，注意，此方法是在UI线程中执行的。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.GetAllSelectedMonitorData(Microsoft.Office.Interop.Excel.Worksheet,System.Int32[])">
	<summary>
 返回所有选择的测点的监测数组组成的大数组
 </summary>
	<param name="RowNum_Tags"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.GetdicDate_Datum_ForDynamic(System.DateTime[],System.Object[0:,0:])">
	<summary>
 返回动态曲线图的监测数据中的字典：以每一天的日期，索引选择的测点在当天的数据。
 </summary>
	<param name="arrDateRange"></param>
	<param name="AllSelectedMonitorData"></param>
	<returns>返回动态曲线图的关键参数：dic_Date_ChosenDatum，
 字典中的值这里只能定义为Object的数组，因为有可能单元格中会出现没有数据的情况。</returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.DrawDynamicChart(System.Collections.Generic.Dictionary{System.DateTime,System.Object[]},System.String[],System.Object[0:,0:])">
	<summary>
 绘制动态曲线图
 </summary>
	<param name="p_dicDate_ChosenDatum"></param>
	<param name="arrChosenTags"></param>
	<param name="arrDataDisplacement"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.DrawStaticChart(System.String[],System.DateTime[],System.Object[0:,0:])">
	<summary>
 绘制静态曲线图
 </summary>
	<param name="arrChosenTags"></param>
	<param name="arrDateRange"></param>
	<param name="AllSelectedMonitorData"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.ChartTags(AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base,Microsoft.Office.Interop.Excel.Chart)">
	<summary>
 设置图表的Tags属性
 </summary>
	<param name="MntSheet">用来设置其Tags属性的监测图表对象ClsDrawing_Mnt_Base</param>
	<param name="chart">Chart对象，用来设置其标题，以及其所在的Excel界面的标题</param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.ExcelAppBeauty(Microsoft.Office.Interop.Excel.Application,System.Boolean)">
	<summary>
 程序界面美化
 </summary>
	<param name="app">用来进行开头与界面设置的Excel界面</param>
	<remarks>设置的元素包括Excel界面的尺寸、工具栏、滚动条等的显示方式</remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.btnChooseMonitorData_Click(System.Object,System.EventArgs)">
	<summary>
 选择监测数据的文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.btnDrawMonitorPoints_Click(System.Object,System.EventArgs)">
	<summary>
 在Visio中绘制相应的测点位置
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Others.listSheetsName_SelectedIndexChanged(System.Object,System.EventArgs)">
	<summary>
 当选择的数据工作表发生变化时引发
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.NodeNames.cst_xmlNode2_FilePath">
	<summary>
 工作簿文件的绝对路径
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.NodeNames.cst_xmlNode2_SheetName">
	<summary>
 工作表名称
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.NodeNames.cst_xmlNode1_Progress">
	<summary>
 施工进度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.NodeNames.cst_xmlNode1_SectionalView">
	<summary>
 开挖剖面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.NodeNames.cst_xmlNode1_PlanView">
	<summary>
 开挖平面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.NodeNames.cst_xmlNode1_PointCoordinates">
	<summary>
 测点坐标
 </summary>
	<remarks></remarks>
</member><member name="T:AME.AMEProject.clsProjectFile.NodeNames">
	<summary>
 记录XML文档中的各种节点的名称
 </summary>
	<remarks>节点名称中不能包含空字符</remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.P_FilePath">
	<summary>
 项目文件的路径
 </summary>
	<remarks></remarks>
</member><member name="P:AME.AMEProject.clsProjectFile.FilePath">
	<summary>
 项目文件的路径
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.P_FileContents">
	<summary>
 项目文件中记录的内容的实际对象
 </summary>
	<remarks></remarks>
</member><member name="P:AME.AMEProject.clsProjectFile.Contents">
	<summary>
 ！项目文件中记录的内容的实际对象，即其中的Workbook对象、Worksheet对象等
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.F_Application">
	<summary>
 整个程序中用来放置各种隐藏的Excel数据文档的Application对象
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.clsProjectFile.F_blnFileValid">
	<summary>
 指示此项目文件是否是有效文件，即文件中的数据是否正常，文件中索引的工作簿或者工作表是否正常
 </summary>
	<remarks>只要有一个不正常，则为False</remarks>
</member><member name="M:AME.AMEProject.clsProjectFile.#ctor(System.String)">
	<summary>
 构造函数
 </summary>
	<param name="xmlFilePath">与程序进行交互的XML文档的路径，如果不指定，则为空字符</param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.clsProjectFile.SaveToXmlFile">
	<summary>
 将设置好的项目写入文件
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.clsProjectFile.WriteChildNodes(System.Xml.XmlDocument,System.Xml.XmlElement,Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 将每一个工作表项目写入XML文档中，此方法在ParentElement下创建两个子节点
 </summary>
	<param name="Doc">写入节点的xml文档</param>
	<param name="ParentElement">节点元素，要写入的子节点就是在此节点之下的</param>
	<param name="sheet">要写入的Excel工作表</param>
	<remarks>在此方法中，将指定工作表所在的工作簿的绝对路径，与此工作表的名称，作为两个子节点，
 写入到父节点ParentElement中。</remarks>
</member><member name="M:AME.AMEProject.clsProjectFile.LoadFromXmlFile">
	<summary>
 从项目文件中读取数据，并打开相应的Excel程序与工作簿
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.clsProjectFile.ValidateNodeForWorksheet(System.Xml.XmlElement,AME.FileContents,System.Boolean@)">
	<summary>
 检测工作表节点的有效性，此类节点中包含了两个子节点，一个是此工作表所在的工作簿的路径，一个是此工作表的名称；
 如果检测通过，则返回此Worksheet对象，否则返回Nothing
 </summary>
	<param name="WorksheetNode"></param>
	<param name="FileContents">用来放置项目文件中记录的工作簿或者工作表对象的变量</param>
	<param name="blnNodeForWorksheetValidated"></param>
	<returns>要返回的工作表对象，如果验证不通过，则返回Nothing</returns>
	<remarks></remarks>
</member><member name="T:AME.AMEProject.clsProjectFile">
	<summary>
 项目文件类，对应于每一个本地的项目文件。
 它主要实现XML文档中的内容与程序中的FileContents对象的交互。
 </summary>
	<remarks>此类并不实现与界面的UI交互。</remarks>
</member><member name="M:AME.Miscellaneous.GeneralMethods.Coordinate_Conversion(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
	<summary>
 进行CAD坐标与Visio坐标的坐标变换
 </summary>
	<param name="CAD_x1"></param>
	<param name="CAD_y1"></param>
	<param name="CAD_x2"></param>
	<param name="CAD_y2"></param>
	<param name="Visio_x1"></param>
	<param name="Visio_y1"></param>
	<param name="Visio_x2"></param>
	<param name="Visio_y2"></param>
	<returns>返回x与y方向的线性变换的斜率与截距</returns>
	<remarks>其基本公式为：x_Visio=Kx*x_CAD+Cx；y_Visio=Ky*y_CAD+Cy</remarks>
</member><member name="T:AME.Miscellaneous.GeneralMethods.Cdnt_Cvsion">
	<summary>
 CAD坐标系与Visio坐标系进行线性转换的斜率与截距
 </summary>
	<remarks>其基本公式为：x_Visio=Kx*x_CAD+Cx；y_Visio=Ky*y_CAD+Cy</remarks>
</member><member name="M:AME.Miscellaneous.GeneralMethods.ExpandDateSpan(AME.Miscellaneous.DateSpan,AME.Miscellaneous.DateSpan)">
	<summary>
 将两个TimeSpan向量进行比较，以扩展为二者区间的并集
 </summary>
	<param name="DateSpan_Larger">timespan1</param>
	<param name="DateSpan_Shorter">timespan2</param>
	<returns>返回扩展后的timespan</returns>
	<remarks>将两个timespan的区间进行组合，取组合后的最小值与最大值</remarks>
</member><member name="M:AME.Miscellaneous.GeneralMethods.GetUniqueID">
	<summary>
 返回一个全局的唯一的ID值，用来定义每一个绘图的图表对象
 </summary>
	<returns></returns>
	<remarks>这里先暂且就用当前时间的Tick值来定义</remarks>
</member><member name="T:AME.Miscellaneous.GeneralMethods.RefreshComoboxHandler">
	<summary>
 委托：更新：基坑ID列表框、施工进度列表框
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.GeneralMethods.RefreshCombobox(System.Windows.Forms.ListControl,AME.Miscellaneous.LstbxDisplayAndItem[])">
	<summary>
 在主UI线程中更新：基坑ID列表框、施工进度列表框
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.GeneralMethods">
	<summary>
 一些杂项的方法
 </summary>
	<remarks>记录了一些用来处理零碎问题的共享方法</remarks>
</member><member name="F:AME.Miscellaneous.Color.Color_BuildindUp">
	<summary>
 表示在开挖剖面图中，已经开挖到基坑底部，正在向上建时的颜色：RGB(20, 200, 230)
 </summary>
	<remarks>为偏暗的青色</remarks>
</member><member name="F:AME.Miscellaneous.Color.Color_DiggingDown">
	<summary>
 表示在开挖剖面图中，还未开挖到基坑底部标高时的颜色：RGB(220, 160, 0)
 </summary>
	<remarks>为偏暗的黄色</remarks>
</member><member name="T:AME.Miscellaneous.Color">
	<summary>
 各种与RGB函数返回的值相同的颜色值
 </summary>
	<remarks>RGB函数返回的整数值与RGB参量的换算关系为：Color属性值=R + 256*G + 256^2*B</remarks>
</member><member name="F:AME.Miscellaneous.LowIndexOfObjectsInExcel.ObjectArrayFromRange_Value">
	<summary>
 在Excel中用Range.Value返回的数组的第一个元素的下标值
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.LowIndexOfObjectsInExcel.SeriesInSeriesCollection">
	<summary>
 Chart图表中的数据列集合中，第一条曲线对应的下标值
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.LowIndexOfObjectsInExcel">
	<summary>
 枚举Excel中各种对象在集合中的第一个元素的索引下标值
 </summary>
	<remarks>从概念上来说，这里不应该用枚举类型，而应该用常数类型。但是由于这里的所有项的值都是整数值，
 而且值的范围大概都是非0即1，所以这里用枚举值来表示也是完全可以的。
 一定要注意的是，这里的每一个枚举项都必须要给出对应的下标数值来！！！</remarks>
</member><member name="F:AME.Miscellaneous.ProjectState.NewProject">
	<summary>
 新建项目
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.ProjectState.OpenProject">
	<summary>
 打开项目
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.ProjectState.EditProject">
	<summary>
 编辑项目
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.ProjectState">
	<summary>
 对项目文件执行的操作方式
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.DataType.Type_Integer">
	<summary>
 整数
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.DataType.Type_Single">
	<summary>
 单精度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.DataType.Type_Double">
	<summary>
 双精度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.DataType.Type_Date">
	<summary>
 日期
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.DataType.Type_String">
	<summary>
 字符串
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.DataType.Type_Object">
	<summary>
 对象型
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.DataType">
	<summary>
 .NET中的数据类型枚举
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.LstbxDisplayAndItem.DisplayMember">
	<summary>
 在列表框中进行显示的文本
 </summary>
	<remarks>此常数的值代表此类中代表要在列表框中显示的文本的属性名，即"DisplayedText"</remarks>
</member><member name="F:AME.Miscellaneous.LstbxDisplayAndItem.ValueMember">
	<summary>
 列表框中每一项对应的值（任何类型的值）
 </summary>
	<remarks>此常数的值代表此类中代表列表框中的每一项绑定的数据的属性名，即"Value"</remarks>
</member><member name="M:AME.Miscellaneous.LstbxDisplayAndItem.#ctor(System.String,System.Object)">
	<summary>
 构造函数
 </summary>
	<param name="DisplayedText">用来显示在列表的UI界面中的文本</param>
	<param name="Value">列表项对应的值</param>
	<remarks></remarks>
</member><member name="F:AME.Miscellaneous.LstbxDisplayAndItem.NothingInListBox.None">
	<summary>
 什么也没有选择
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.LstbxDisplayAndItem.NothingInListBox">
	<summary>
 列表框中用来表示“什么也没有”。
 1、在声明时：listControl控件.Items.Add(New LstbxDisplayAndItem(" 无", NothingInListBox.None))
 2、在选择列表项时：listControl控件.SelectedValue = NothingInListBox.None
 3、在读取列表中的数据时，作出判断：If Not LstbxItem.Value.Equals(NothingInListBox.None) Then ...
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.LstbxDisplayAndItem">
	<summary>
 用来作为ListControl类的.Add方法中的Item参数的类。
 </summary>
	<remarks>通过指定ListControl类的DisplayMember属性，来设置列表框中显示的文本</remarks>
</member><member name="P:AME.Miscellaneous.Dictionary_AutoKey`1.I_Dictionary_AutoKey.Key">
	<summary>
 此元素在其所在的集合中的键，这个键是在元素添加到集合中时自动生成的，
 所以应该在执行集合.Add函数时，用元素的Key属性接受函数的输出值。
 在集合中添加此元素：Me.Key=Me所在的集合.Add(Me)
 在集合中索引此元素：集合.item(me.key)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.Dictionary_AutoKey`1.I_Dictionary_AutoKey">
	<summary>
 集合类Dictionary_AutoKey中的元素所必须要实现的接口。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.Dictionary_AutoKey`1.#ctor">
	<summary>
 构造函数：判断此集合中的元素类型是否实现了接口I_Dictionary_AutoKey。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.Dictionary_AutoKey`1.Add(`0)">
	<summary>
 用法：Me.Key=Me所在的集合.Add(Me)
 </summary>
	<param name="Value"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.Dictionary_AutoKey`1.NewID">
	<summary>
 在集合中添加对象时，自动执行此方法，以返回对象元素在集合中的键。
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.Dictionary_AutoKey`1">
	<summary>
 此集合的最大特点就是：它的每一个元素的“键”都是一个Integer的值，
 而这个键是在元素添加到集合中时自动生成的。此集合中的值的类型中，都含有一个代表此元素在集合中的键的属性（比如ID），
 由此可以直接通过此元素来索引到它在集合中的位置。
 </summary>
	<typeparam name="TValue">集合中元素的值，值的类型必须要实现“I_Dictionary_AutoKey”接口</typeparam>
	<remarks>
	</remarks>
</member><member name="P:AME.Miscellaneous.DateSpan.StartedDate">
	<summary>
 施工段的起始日期
 </summary>
	<remarks></remarks>
</member><member name="P:AME.Miscellaneous.DateSpan.FinishedDate">
	<summary>
 施工段的结束日期
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.DateSpan">
	<summary>
 表示一段施工日期的跨度区间
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.myAPI.FindWindow(System.String,System.String)">
	<summary>
 搜索指定类型或标题名的窗口句柄
 </summary>
	<param name="lpClassName"></param>
	<param name="lpWindowName"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.myAPI.SetForegroundWindow(System.IntPtr)">
	<summary>
 设置窗口为前台窗口
 </summary>
	<param name="hwnd"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.myAPI.GetWindowThreadProcessId(System.Int32,System.Int32@)">
	<summary>
 获取Excel程序的COM对象的进程ID
 </summary>
	<param name="handle"></param>
	<param name="processId"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.myAPI.SetParent(System.Int64,System.Int64)">
	<summary>
 为窗体设置父窗体
 </summary>
	<param name="hWndChild"></param>
	<param name="hWndNewParent"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.myAPI">
	<summary>
 用来记录程序中使用到的API函数
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.AdoForExcel.ConnectToExcel(System.String)">
	<summary>
 创建对Excel工作簿的连接
 </summary>
	<param name="ExcelWorkbookPath">要进行连接的Excel工作簿的路径</param>
	<returns>一个OleDataBase的Connection连接，此连接还没有Open。</returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.AdoForExcel.GetSheetsName(System.Data.OleDb.OleDbConnection)">
	<summary>
 从对于Excel的数据连接中获取Excel工作簿中的所有工作表
 </summary>
	<param name="conn"></param>
	<returns>如果此连接不是连接到Excel数据库，则返回Nothing</returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.AdoForExcel.CreateNewTable(System.Data.OleDb.OleDbConnection,System.String)">
	<summary>
 创建一个新的Excel工作表，并向其中插入一条数据
 </summary>
	<param name="conn"></param>
	<param name="TableName">要新创建的工作表名称</param>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.AdoForExcel.InsertToTable(System.Data.OleDb.OleDbConnection,System.String,System.String,System.Object)">
	<summary>
 向Excel工作表中插入一条数据，此函数并不通用，不建议使用
 </summary>
	<param name="conn"></param>
	<param name="TableName">要插入数据的工作表名称</param>
	<param name="FieldName">要插入到的字段</param>
	<param name="Value">实际插入的数据</param>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.AdoForExcel.GetDataFromExcel(System.Data.OleDb.OleDbConnection,System.String,System.String)">
	<summary>
 读取Excel工作簿中的数据
 </summary>
	<param name="conn">OleDB的数据连接</param>
	<param name="SheetName">要读取的数据所在的工作表</param>
	<param name="FieldName">在读取的字段</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.AdoForExcel.ConnectionSourceValidated(System.Data.OleDb.OleDbConnection)">
	<summary>
 验证连接的数据源是否是Excel数据库
 </summary>
	<param name="conn"></param>
	<returns>如果是Excel数据库，则返回True，否则返回False。</returns>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.AdoForExcel">
	<summary>
 利用ADO.NET连接Excel数据库，并执行相应的操作：  
 创建表格，读取数据，写入数据，获取工作簿中的所有工作表名称。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.ConvertRangeDataToVector``1(Microsoft.Office.Interop.Excel.Range)">
	<summary>
 将Excel的Range对象的数据转换为指定数据类型的一维向量,
 Range.Value返回一个二维的表格，此函数将其数据按列行拼接为一维数组。
 （即按(0,0),(0,1),(1,0),(1,1),(2,0)...的顺序排列）
 </summary>
	<param name="rg">用于提取数据的Range对象</param>
	<returns>返回一个指定类型的一维向量，如“Single()”</returns>
	<remarks>直接用Range.Value来返回的数据，其类型只能是Object，
 而其中的数据是一个元素类型为Object的二维数据（即使此Range对象只有一行或者一列）。
 所以要进行显式的转换，将其转换为指定类型的向量或者二维数组，以便于后面的数据操作。</remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.ConvertRangeDataToMatrix``1(Microsoft.Office.Interop.Excel.Range)">
	<summary>
 将Excel的Range对象的数据转换为指定数据类型的二维数组
 </summary>
	<param name="rg">用于提取数据的Range对象</param>
	<returns>返回一个指定类型的二维数组，如“Single(,)”</returns>
	<remarks>直接用Range.Value来返回的数据，其类型只能是Object，
 而其中的数据是一个元素类型为Object的二维数据（即使此Range对象只有一行或者一列）。
 所以要进行显式的转换，将其转换为指定类型的向量或者二维数组，以便于后面的数据操作。</remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.ConvertColumnNumberToString(System.Int32)">
	<summary>
 将Excel表中的列的数值编号转换为对应的字符
 </summary>
	<param name="ColNum">Excel中指定列的数值序号</param>
	<returns>以字母序号的形式返回指定列的列号</returns>
	<remarks>1对应A；26对应Z；27对应AA</remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.ConvertColumnStringToNumber(System.String)">
	<summary>
 将Excel表中的字符编号转换为对应的数值
 </summary>
	<param name="colString">以A1形式表示的列的字母序号</param>
	<returns>以整数的形式返回指定列的数值编号，A列对应数值1</returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.SheetCompare(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 比较两个工作表是否相同。
 判断的标准：先判断工作表的名称是否相同，如果相同，再判断工作表所属的工作簿的路径是否相同，
 如果二者都相同，则认为这两个工作表是同一个工作表
 </summary>
	<param name="sheet1">进行比较的第1个工作表对象</param>
	<param name="sheet2">进行比较的第2个工作表对象</param>
	<returns></returns>
	<remarks>不用 blnSheetsMatched = sheet1.Equals(sheet2)，是因为这种方法并不能正确地返回True。</remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.MatchOpenedWkbk(System.String,Microsoft.Office.Interop.Excel.Application,System.Boolean,System.Boolean)">
	<summary>
 检测工作簿是否已经在指定的Application程序中打开。
 如果最后此工作簿在程序中被打开（已经打开或者后期打开），则返回对应的Workbook对象，否则返回Nothing。
 这种比较方法的好处是不会额外去打开已经打开过了的工作簿。
 </summary>
	<param name="wkbkPath">进行检测的工作簿</param>
	<param name="Application">检测工作簿所在的Application程序</param>
	<param name="OpenIfNotOpened">如果此Excel工作簿并没有在此Application程序中打开，是否要将其打开。</param>
	<param name="OpenByReadOnly">是否以只读方式打开</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.MatchWorksheet(Microsoft.Office.Interop.Excel.Workbook,System.String)">
	<summary>
 检测指定工作簿内是否有指定的工作表，如果存在，则返回对应的工作表对象，否则返回Nothing
 </summary>
	<param name="wkbk">进行检测的工作簿对象</param>
	<param name="sheetName">进行检测的工作表的名称</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.ExcelFunction.SetLocation_Size(AME.All_Drawings_In_Application.ChartSize,Microsoft.Office.Interop.Excel.Chart,Microsoft.Office.Interop.Excel.Application)">
	<summary>
 设置Chart与Applicatin的尺寸
 </summary>
	<param name="ChartSize_sugested"></param>
	<param name="Chart">进行尺寸设置的Chart对象</param>
	<param name="Application">进行尺寸设置的Excel程序</param>
	<remarks></remarks>
</member><member name="P:AME.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:AME.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:AME.My.Resources.Resources.AME">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.btn_Roll">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.DatafromExcel">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.DataFromWord">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.IdToShape">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.SplashScreen">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.线条背景">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="P:AME.My.Resources.Resources.菜单栏">
	<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member><member name="T:AME.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="F:AME.DiaFrm_PointsTreeView.cstRowNum_FirstPoint">
	<summary>
 工作表“监测点编号与对应坐标”中，第一个测点所在的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.cstDepth_PointInTreeView">
	<summary>
 在TreeView中，表示监测点的数据在控件中的深度（即对应TreeNode的level属性）（第一级深度为0）
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.F_wkshtPoints">
	<summary>
 存放监测点位信息的Excel表格
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.dicChosenPoints_TreeView">
	<summary>
 在TreeView中选择的监测点的完整路径，索引对应的TreeNode对象
 </summary>
	<remarks>监测点只包括最后一级要进行绘图的测点，而不包括其父节点</remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.dicListedPoints">
	<summary>
 选择的监测点，索引的item为传递到列表框中的文本
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.blnHasLoaded">
	<summary>
 指示绘制监测点位的窗口Form是否已经加载
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.F_MonitorPointsInfo">
	<summary>
 Visio平面图中，与监测点位相关的信息（不是开挖平面），用来在Visio平面图中绘制测点。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.F_PaintingPage">
	<summary>
 监测点位所要绘制的Visio图形对象
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.RowsToDictionary.RowsSpan">
	<summary>
 监测项目或者基坑ID的数据在大数组中对应的行号的区域
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.RowsToDictionary.dic">
	<summary>
 一个字典对象
 </summary>
	<remarks></remarks>
</member><member name="T:AME.DiaFrm_PointsTreeView.RowsToDictionary">
	<summary>
 TreeView中的父项目的文本与其在大数组中对应的行号区间
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.PointInVisio.strItem">
	<summary>
 监测项目的名称，如“测斜”
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.PointInVisio.strPoint">
	<summary>
 监测点的编号，如“CX1”
 </summary>
	<remarks></remarks>
</member><member name="F:AME.DiaFrm_PointsTreeView.PointInVisio.Coordinates">
	<summary>
 监测点在Visio中的坐标值(x,y)
 </summary>
	<remarks></remarks>
</member><member name="T:AME.DiaFrm_PointsTreeView.PointInVisio">
	<summary>
 Visio中的监测点的形状的基本信息
 </summary>
	<remarks></remarks>
</member><member name="P:AME.DiaFrm_PointsTreeView.ConversionParameter">
	<summary>
 CAD坐标系与Visio坐标系进行线性转换的斜率与截距
 </summary>
	<value></value>
	<returns>kx、cx、ky、cy</returns>
	<remarks>其基本公式为：x_Visio=Kx*x_CAD+Cx；y_Visio=Ky*y_CAD+Cy</remarks>
</member><member name="P:AME.DiaFrm_PointsTreeView.dicVisioPoints">
	<summary>
 此visio图形中的所有监测点的形状的字典集合
 </summary>
	<value></value>
	<returns>Dictionary(Of 监测点在列表框中显示的文本,监测点的形状ID)</returns>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.#ctor(AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation,Microsoft.Office.Interop.Excel.Worksheet,AME.All_Drawings_In_Application.ClsDrawing_PlanView)">
	<summary>
 构造函数
 </summary>
	<param name="pointsInfo">在Visio平面图中与监测点位信息相关的数据</param>
	<param name="wkshtPoints">存放监测点位信息的Excel表格</param>
	<param name="PaintingPage">监测点位所要绘制的Visio图形对象</param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.FrmTreeView_Load(System.Object,System.EventArgs)">
	<summary>
 窗口加载
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>先提取坐标变换的斜率及截距；再从监测点编号与其对应的坐标创建树形列表</remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.constructTreeView(Microsoft.Office.Interop.Excel.Worksheet,System.Windows.Forms.TreeView)">
	<summary>
 从监测点编号与其对应的坐标创建树形列表
 </summary>
	<param name="wksht">保存数据的工作表</param>
	<param name="myTreeView">用于列举监测点编号的TreeView对象</param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.TreeViewPoints_AfterCheck(System.Object,System.Windows.Forms.TreeViewEventArgs)">
	<summary>
 在TreeView的Checkbox框中进行选择或者取消选择时的操作
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.BtnAdd_Click(System.Object,System.EventArgs)">
	<summary>
 将TreeView中选择的测点添加进列表中
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.BtnRemove_Click(System.Object,System.EventArgs)">
	<summary>
 移除选定的测点
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.BtnClear_Click(System.Object,System.EventArgs)">
	<summary>
 清空最后的测点
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.BtnColpsAll_Click(System.Object,System.EventArgs)">
	<summary>
 CollapseAll
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.BtnOk_Click(System.Object,System.EventArgs)">
	<summary>
 点击确定时将窗口隐藏
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>如果已经进行过预览，则直接隐藏窗口，如果没有进行过预览，则先进行一次预览，再隐藏窗口</remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.FrmPointsTreeView_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 点击关闭窗体时将窗体隐藏
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>对于模式窗体（以showdialog显示），在点击关闭时，其实就是执行hide操作</remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.GetPointsToBeProcessed(System.String[],System.String[])">
	<summary>
 根据Visio中与列表框中的测点字符的差异，得到分别要进行添加和删除的测点
 </summary>
	<param name="arrExistedPoints">在Visio中存在的测点的字符数据</param>
	<param name="arrListedPoints">在ListBox列表中存在的测点的字符数据</param>
	<returns>返回一个数组，数组中有两个元素，元素各自又都为一个数组，第一个为要在Visio进行添加的测点的字符的数组；
 第二个为要从Visio进行删除的测点图形的字符的数组</returns>
	<remarks>这里的“字符数据”都是指测点在TreeView中的完整路径的字符</remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.AddMonitorPoints(Microsoft.Office.Interop.Visio.Window,System.String[],AME.DiaFrm_PointsTreeView.PointInVisio[])">
	<summary>
 根据指定的监测点在visio图形中绘出对应的测点图形
 </summary>
	<param name="vsoWindow">进行绘图的visio图形</param>
	<param name="strTags">要绘制的所有监测点的在列表中对应的文本</param>
	<param name="PointsToBeAdded">要绘制的所有监测点的集合</param>
	<remarks></remarks>
</member><member name="M:AME.DiaFrm_PointsTreeView.ClearAllCheckedNode(System.Object,System.EventArgs)">
	<summary>
 清空treeview中所有节点的选择
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>这里将代码限死为3层节点，这种方法有待改进</remarks>
</member><member name="P:AME.FileContents.lstWkbks">
	<summary>
 项目文件中记录的所有工作簿
 </summary>
	<remarks></remarks>
</member><member name="P:AME.FileContents.lstSheets_Progress">
	<summary>
 施工进度工作表
 </summary>
	<remarks></remarks>
</member><member name="P:AME.FileContents.Sheet_PlanView">
	<summary>
 开挖平面图工作表
 </summary>
	<remarks></remarks>
</member><member name="P:AME.FileContents.Sheet_sectionalView">
	<summary>
 开挖剖面图工作表
 </summary>
	<remarks></remarks>
</member><member name="P:AME.FileContents.sheet_PointCoordinates">
	<summary>
 测点坐标工作表
 </summary>
	<remarks></remarks>
</member><member name="T:AME.FileContents">
	<summary>
 文件中要保存的内容或对象
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.cstEleTop">
	<summary>
 所有标高项目中的最高位置的标高值
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.cstEleGround">
	<summary>
 工程项目的自然地面的标高值
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.cm2pt">
	<summary>
 长度单位厘米到磅的转换系数
 </summary>
	<remarks>后面的除1.3表示将图形缩小1.3位</remarks>
</member><member name="F:AME.frmDrawElevation.cstColNum_DateList">
	<summary>
 记录施工进度日期的数据列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.cstRowNum_TheFirstDay">
	<summary>
 第一个日期所在的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.cstWidth_Rectg">
	<summary>
 每一个基坑区域的矩形形状的宽度，以磅为单位
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.cstWidth_Textbox">
	<summary>
 文本框“地面标高”的宽度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.F_DrawingChart">
	<summary>
 进行绘图的Chart对象
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.F_shtElevation">
	<summary>
 数据库中的工作表：剖面标高
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.F_textbox_constructionDate">
	<summary>
 绘图工作表中的文本框，用以记录施工当天的日期
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.F_dicIDtoElevationAndData">
	<summary>
 创建一个集合，以基坑的ID来索引[此基坑的标高项目,对应的标高]的数组。
 </summary>
	<remarks>其key为"基坑的ID"，value为[此基坑的标高项目,对应的标高]的数组</remarks>
</member><member name="F:AME.frmDrawElevation.F_dicChoseRange_Region">
	<summary>
 关键变量，以每一个选择的基坑区域的Range对象来索引其所代表的基坑区域的各种信息
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawElevation.F_sngLeftRef">
	<summary>
 第一个基坑区域的矩形左边界的坐标值，以磅为单位
 </summary>
	<remarks>sngLeftRef = shtDrawing.Columns("A:A").Width</remarks>
</member><member name="F:AME.frmDrawElevation.F_sngTopRef">
	<summary>
 基坑区域的矩形顶部的基准高度，以磅为单位，它对应的开挖标高为矩形最顶部的标高（不一定是自然地坪标高）
 </summary>
	<remarks>sngTopRef = shtDrawing.Rows("1:3").Height</remarks>
</member><member name="F:AME.frmDrawElevation.F_MainForm">
	<summary>
 程序的主程序对象，这里要单独再用一个变量，是为了解决在多线程调用时APPLICATION_MAINFORM可能会不能被正常调用（它的有些属性会错误地返回Nothing）
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.RefreshComobox_ProcessRange(System.Collections.Generic.List{AME.ClsData_DataBase.clsProcessRegionData})">
	<summary>
 在列表中列出所有基坑区域的Tag值
 </summary>
	<param name="ProcessRange"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.btnChooseAll_Click(System.Object,System.EventArgs)">
	<summary>
 全选
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.btnChooseNone_Click(System.Object,System.EventArgs)">
	<summary>
 全不选
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.btnGenerate_Click(System.Object,System.EventArgs)">
	<summary>
 点击生成按钮
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.BGW_Generate_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
	<summary>
 生成绘图，此方法是在后台的工作者线程中执行的。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.BGW_Generate_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
	<summary>
 当后台的工作者线程结束（即BGW_Generate_DoWork方法执行完毕）时触发，注意，此方法是在UI线程中执行的。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.GenerateChart(AME.Miscellaneous.LstbxDisplayAndItem[])">
	<summary>
 开始生成整个绘图图表
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.GetDrawingSheet">
	<summary>
 打开用于绘图的Excel程序，并进行界面设计
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.DrawChart(Microsoft.Office.Interop.Excel.Worksheet,System.Collections.Generic.Dictionary{Microsoft.Office.Interop.Excel.Range,AME.ClsData_DataBase.clsProcessRegionData},Microsoft.Office.Interop.Excel.Range[])">
	<summary>
 1、开始绘制开挖剖面图的Chart对象
 </summary>
	<param name="dicProcessRegion">以进度列表中的选择的"基坑区域"来索引此区域的相关信息</param>
	<param name="arrRangesChosen">进度表中所有选择的基坑区域的Range对象，
 每一个Range对象代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</param>
	<returns>进行绘图的Chart对象的高度值，以磅为单位，可以用来确定Excel Application的高度值</returns>
	<remarks>绘图时，标高值与Excel中的Y坐标值的对应关系：
 在程序中，定义了eleTop变量（以米为单位）与F_sngTopRef变量（以磅为单位），
 它们指示的是此基坑区域中，地下室顶板的标高值与其在Excel绘图中对应的Y坐标值</remarks>
</member><member name="M:AME.frmDrawElevation.DrawRegion(Microsoft.Office.Interop.Excel.Chart,System.Single,AME.ClsData_DataBase.clsProcessRegionData)">
	<summary>
 2、对于每一个基坑区域，在Chart中去绘制与其相关的图形
 </summary>
	<param name="DrawingChart">进行绘图的Chart对象</param>
	<param name="Left">图形在Excel中的左边界，以磅为单位</param>
	<param name="ProcessRegion">基坑区域对应的各种数据信息</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.GetTimeSpan(Microsoft.Office.Interop.Excel.Range[])">
	<summary>
 获取时间跨度
 </summary>
	<param name="arrRangesChosen">表示进度表中所有选择的基坑区域的Range对象,
 每一个Range对象代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawElevation.ExcelAppBeauty(Microsoft.Office.Interop.Excel.Application)">
	<summary>
 程序界面美化
 </summary>
	<param name="ExcelApp"></param>
	<remarks></remarks>
</member><member name="T:AME.frmDrawElevation">
	<summary>
 绘制剖面标高图的窗口界面
 </summary>
	<remarks>绘图时，标高值与Excel中的Y坐标值的对应关系：
 在程序中，定义了eleTop变量（以米为单位）与F_sngTopRef变量（以磅为单位），
 它们指示的是此基坑区域中，地下室顶板的标高值与其在Excel绘图中对应的Y坐标值，
 其转换关系式为：构件A在绘图中的Y坐标 = (eleTop - 构件A的标高值) * cm2pt + F_sngTopRef</remarks>
</member><member name="T:AME.GlobalApp_Form.APPLICATION_MAINFORM.ShowProgressBar_MarqueeHandler">
	<summary>
 委托：在主程序界面上显示进度条与进度信息
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.ShowProgressBar_Marquee">
	<summary>
 在主程序界面上显示进度条与进度信息
 </summary>
	<remarks></remarks>
</member><member name="T:AME.GlobalApp_Form.APPLICATION_MAINFORM.HideProgressHandler">
	<summary>
 委托：隐藏主程序界面中的进度条与进度信息
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.HideProgress(System.String)">
	<summary>
 隐藏主程序界面中的进度条与进度信息
 </summary>
	<param name="state">要显示在进度信息标签中的文本</param>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.alarmCounter">
	<summary>
 闹钟触发的次数
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.TimerEventProcessor(System.Object,System.EventArgs)">
	<summary>
 在指定的时间间隔内触发闹钟事件
 </summary>
	<param name="myObject"></param>
	<param name="myEventArgs"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MainUI_ProjectNotOpened">
	<summary>
 设置主程序中还没有任何项目文件打开时的UI界面
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MainUI_ProjectOpened">
	<summary>
 设置项目文档打开后的主程序的UI界面
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Incline.F_TheFirstseriesTag">
	<summary>
 Chart中第一条监测曲线所对应的相关信息
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Incline.F_DepthReference">
	<summary>
 基准标高，即将标高数据换算为相对于地面标高的深度数据
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.btnGenerate_Click(System.Object,System.EventArgs)">
	<summary>
 生成监测曲线图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.BGW_Generate_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
	<summary>
 生成绘图，此方法是在后台的工作者线程中执行的。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.BGW_Generate_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
	<summary>
 当后台的工作者线程结束（即BGW_Generate_DoWork方法执行完毕）时触发，注意，此方法是在UI线程中执行的。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.Generate(Microsoft.Office.Interop.Excel.Worksheet,System.String[0:,0:],AME.ClsData_DataBase.clsProcessRegionData,System.Boolean)">
	<summary>
 1.开始进行绘图
 </summary>
	<param name="sheetMonitorData">测斜曲线的数据所在的工作表</param>
	<param name="Components">与基坑ID相关的信息：结构项目与对应标高</param>
	<param name="ProcessRegionData">与此监测数据所对应的基坑的施工进度</param>
	<param name="NewExcelApp">用来判断是否要创建新的Excel，以及是否要对新画布所在的Excel进行美化。</param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.RefreshComobox_ExcavationID(System.Collections.Generic.Dictionary{System.String,AME.ClsData_DataBase.clsExcavationID})">
	<summary>
 在列表中列出所有基坑数据的ID值
 </summary>
	<param name="dic_Data"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.RefreshComobox_ProcessRange(System.Collections.Generic.List{AME.ClsData_DataBase.clsProcessRegionData})">
	<summary>
 在列表中列出所有基坑区域的Tag值
 </summary>
	<param name="ProcessRange"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.GetApplication(System.Boolean,AME.Miscellaneous.Dictionary_AutoKey{AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing},AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing@)">
	<summary>
 获取用来绘图的Excel程序，并将此界面加入主程序的监测曲线集合
 </summary>
	<param name="NewExcelApp">按情况看是否要打开新的Application</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.getdicDate_ColNum(Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 工作表中的每一天对应的数据列，以日期索引当天数据在工作表中的列号
 </summary>
	<param name="shtMonitorData"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.DrawChart(System.DateTime,Microsoft.Office.Interop.Excel.Range)">
	<summary>
 绘制测斜曲线图
 </summary>
	<param name="DateOfCurve">绘制的曲线所对应的施工日期</param>
	<param name="dataRange">包括第一列，但是不包括第一行的日期。</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.StandardDepthLine(System.String[0:,0:])">
	<summary>
 标注标高高度
 </summary>
	<param name="ComponentsOfExcationID">记录基坑ID中对应的每一个构件项目与其对应标高的数组,
 数组中的第一列表示构件项目的名称，第二列表示构件项目的标高值</param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.ExcavationDepth_lineAndtextbox(Microsoft.Office.Interop.Excel.Range,System.DateTime)">
	<summary>
 由选择的基坑区域绘制对应的挖深直线与文本框
 </summary>
	<param name="rg">此基坑区域所在的列的Range对象(包括前面几行的表头数据)</param>
	<remarks>此挖深直线与文本框用来进行后期滚动时显示每一天的开挖情况之用的。</remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.DrawDepthLineAndTextBox(Microsoft.Office.Interop.Excel.Chart,System.Single)">
	<summary>
 根据每一个标高值，画出相应的深度线及文本框
 </summary>
	<param name="myChart">进行绘图的图表对象</param>
	<param name="depth">开挖标高值，以绝对标高值表示，而不是相对于地面的深度值</param>
	<returns>只返回绘画后的shape对象，但是不对图形的格式进行设置</returns>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.ExcelAppBeauty(Microsoft.Office.Interop.Excel.Application)">
	<summary>
 程序界面美化
 </summary>
	<param name="app"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.btnDrawMonitorPoints_Click(System.Object,System.EventArgs)">
	<summary>
 绘制测点位置图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawing_Mnt_Incline.btnChooseMonitorData_Click(System.Object,System.EventArgs)">
	<summary>
 选择文件对话框：选择监测数据的文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Incline.F_arrComponents">
	<summary>
 所选择的监测数据所对应的基坑ID，以及此基坑ID中的相关信息。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDrawing_Mnt_Incline.F_ProcessRegionData">
	<summary>
 由根据测斜数据表选择的基坑区域的标签，来得到对应的数据列的Range对象。
 作用是根据选择确定是否要绘制动态开挖深度的直线与文本框
 </summary>
	<remarks></remarks>
</member><member name="T:AME.frmDrawing_Mnt_Incline">
	<summary>
 绘制测斜数据的曲线图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.MonitorInfo.MonitorItem">
	<summary>
 监测项目名称，如“测斜”、“水位”等
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.MonitorInfo.ExcavationRegion">
	<summary>
 基坑编号，如“A1、B、C1、C2、D”
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.MonitorInfo.PointName">
	<summary>
 监测点位名称，如“CX5”，这一字段只有在测斜曲线图中才有定义
 </summary>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.MonitorInfo">
	<summary>
 每一个监测图表的相关信息，包括测斜曲线图与其他监测曲线图（如水位，立柱，圈梁等）
 </summary>
	<remarks></remarks>d

</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Application">
	<summary>
 图表所在的Excel的Application对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Sheet_Data">
	<summary>
 监测数据的工作表
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Sheet_Drawing">
	<summary>
 工作表“标高图”
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Chart">
	<summary>
 监测曲线图
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.ChartSize_sugested">
	<summary>
 绘图界面与画布的尺寸
 </summary>
	<value></value>
	<returns>此结构有四个元素，分别代表：画布的高度、宽度；由画布边界扩展到Excel界面的尺寸的高度和宽度的增量</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Parent">
	<summary>
 此画布所有的Class_ExcelForMonitorDrawing实例
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.CanRoll">
	<summary>
 指示此图表是否可以按时间进行同步滚动
 </summary>
	<value></value>
	<returns>如果为True，则可以同步滚动，为动态图；如果为False，则为静态图</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Type">
	<summary>
 此图表所属的类型，由枚举DrawingType提供
 </summary>
	<value></value>
	<returns>DrawingType枚举类型，指示此图形所属的类型</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Tags">
	<summary>
 绘图图表的相关标签信息
 </summary>
	<value></value>
	<returns></returns>
	<remarks>包括其项目名称、基坑编号、监测点位名称</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.P_Key">
	<summary>
 此对象在它所在的集合中的键。用来在集合中索引到此对象：me=集合.item(me.key)
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Key">
	<summary>
 此元素在其所在的集合中的键，这个键是在元素添加到集合中时自动生成的，
 所以应该在执行集合.Add函数时，用元素的Key属性接受函数的输出值。
 在集合中添加此元素：Me.Key=Me所在的集合.Add(Me)
 在集合中索引此元素：集合.item(me.key)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.UniqueID">
	<summary>
 图表的全局独立ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks>以当时时间的Tick属性来定义</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.P_Chart_App_Title">
	<summary>
 这个属性值的变化会同步到监测曲线的曲线标题，以及绘图程序的窗口标题中。
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Chart_App_Title">
	<summary>
 这个属性值的变化会同步到监测曲线的曲线标题，以及绘图程序的窗口标题中。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.#ctor(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Chart,AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing,AME.All_Drawings_In_Application.DrawingType,System.Boolean)">
	<summary>
 构造函数
 </summary>
	<param name="DataSheet">图表对应的数据工作表</param>
	<param name="DrawingChart">Excel图形所在的Chart对象</param>
	<param name="ParentApp">此图表所在的Excel类的实例对象</param>
	<param name="type">此图表所属的类型，由枚举drawingtype提供</param>
	<param name="CanRoll">是图表是否可以滚动，即是动态图还是静态图</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.RemoveFormCollection">
	<summary>
 将自己从所在的集合中删除
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Base.Close(System.Boolean)">
	<summary>
 关闭绘图的Excel文档以及其所在的Application程序
 </summary>
	<param name="SaveChanges">在关闭文档时是否保存修改的内容</param>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline.P_DepthLine">
	<summary>
 与数据系列相关联的挖深直线
 </summary>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline.DepthLine">
	<summary>
 与数据系列相关联的挖深直线
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline.P_DepthText">
	<summary>
 与数据系列相关联的文本框
 </summary>
 开挖深度信息的文本框

</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline.DepthText">
	<summary>
 与数据系列相关联的文本框
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline.#ctor(Microsoft.Office.Interop.Excel.Series,System.DateTime,Microsoft.Office.Interop.Excel.Shape,Microsoft.Office.Interop.Excel.TextFrame2)">
	<summary>
 构造函数
 </summary>
	<param name="Series"></param>
	<param name="ConstructionDate"></param>
	<param name="DepthLine">与数据系列相关联的挖深直线</param>
	<param name="DepthText">与数据系列相关联的文本框</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline">
	<summary>
 数据列series对象所对应的一些信息对象
 </summary>
	<remarks>它包括每一条数据系列的对象，及其对应的日期、开挖深度的标志线、记录开挖深度值的文本框</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.cst_LboundOfSeriesInCollection">
	<summary>
 数据列在集合seriesCollection中的第一个元素的下标值
 </summary>
	<remarks>office2010的dll中，其值为1（2014.11.13注）</remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.ChartSize_sugested">
	<summary>
 绘图界面与画布的尺寸
 </summary>
	<value></value>
	<returns>此数组有四个元素，分别代表：画布的高度、宽度；由画布边界扩展到Excel界面的尺寸的高度和宽度的增量</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.Information">
	<summary>
 记录数据信息的文本框
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.UsedRange">
	<summary>
 监测曲线的数据范围
 </summary>
	<value>返回的Range对象中，包括此工作表的UsedRange中的第一列，即深度的数据；
 但是不包括第一行的日期数据</value>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline._excavRegion">
	<summary>
 此测斜点所在的基坑区域在进度工作表中对应的数据列
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.ExcavationRegion">
	<summary>
 此测斜点所在的基坑区域在进度工作表中对应的数据列
 </summary>
	<value>   
 一个Range对象，代表此测斜点所在的基坑区域在进度工作表中对应的数据列，
 此Range对象代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</value>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.P_ProcessRegionData">
	<summary>
 在施工进度工作表中，每一个基坑区域相关的各种信息，比如区域名称，区域的描述，区域数据的Range对象，区域所属的基坑ID及其ID的数据等
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.ProcessRegionData">
	<summary>
 在施工进度工作表中，每一个基坑区域相关的各种信息，比如区域名称，区域的描述，区域数据的Range对象，区域所属的基坑ID及其ID的数据等
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.F_dicDateAndColumnNumber">
	<summary>
 此测斜点的监测数据工作表中的每一天与其在工作表中对应的列号
 </summary>
	<remarks>返回一个字典，以监测数据的日期key索引数据所在列号item</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline._ExcavationDepth_lineAndTextbox">
	<summary>
 记录开挖深度的直线与文本框
 </summary>
	<remarks>返回一个数组，数组中有两个元素，第一个为开挖深度的直线；
 第二个为写有相应文字的文本框</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.DepthRefer">
	<summary>
 基准标高，即将标高数据换算为相对于地面标高的深度数据
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.F_seriesColle">
	<summary>
 图表中的数据列集合
 </summary>
	<remarks>它就等效于Me.Chart.SeriesCollection</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.F_dicSreiesTag_Incline">
	<summary>
 用数据列的ID属性来索引对应的数据列，以及与之相关的Tag数据
 </summary>
	<remarks>作为关键字的ID值并不是以0为初始值的，
 而是在series在seriescollection中的序号值来定义的。</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.F_list_HasCurve">
	<summary>
 记录图表中所有的数据系列中的每一项是否有曲线图
 </summary>
	<remarks>由此来确定数据曲线是要放在哪一个系列中，
 以及图例项中要删除哪些或者显示哪些项。
 此列表中的元素的个数始终等于图表中定义的数据系列的个数，即seriesCollection.Count的值</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.F_CurvesCount">
	<summary>
 图表中所包含的数据曲线的数量
 </summary>
	<remarks>由于制作模板的问题，所以SeriesCount指的是图表中的显示出来的监测曲线的数量，
 而seriesCollection.Count指的是图表中定义的数据系列的数量。
 空白系列会包含在seriesCollection.Count中，而在图表中并没有曲线图，因为没有数据。</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.F_movingSeries">
	<summary>
 用来进行滚动的那一个数据列对象
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.#ctor(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Chart,AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing,AME.Miscellaneous.DateSpan,AME.All_Drawings_In_Application.DrawingType,System.Boolean,System.Collections.Generic.Dictionary{System.DateTime,System.Int32},Microsoft.Office.Interop.Excel.Range,Microsoft.Office.Interop.Excel.TextFrame2,AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline,AME.ClsData_DataBase.clsProcessRegionData)">
	<summary>
 构造函数
 </summary>
	<param name="DataSheet">图表对应的数据工作表</param>
	<param name="DrawingChart">Excel图形所在的Chart对象</param>
	<param name="ParentApp">此图表所在的Excel类的实例对象</param>
	<param name="DateSpan">此图表的TimeSpan跨度</param>
	<param name="type">此图表的类型，则枚举DrawingType提供</param>
	<param name="CanRoll">是图表是否可以滚动，即是动态图还是静态图</param>
	<param name="date_ColNum">此测斜点的监测数据工作表中的每一天与其在工作表中对应的列号，
 以监测数据的日期key索引数据所在列号item</param>
	<param name="usedRg">监测曲线的数据范围，此Range对象中，
 包括此工作表的UsedRange中的第一列，即深度的数据；但是不包括第一行的日期数据</param>
	<param name="Info">记录数据信息的文本框</param>
	<param name="FirstSeriesTag">第一条数据系列对应的Tag信息</param>
	<param name="ProcessRegionData">在施工进度工作表中，每一个基坑区域相关的各种信息，比如区域名称，区域的描述，
 区域数据的Range对象，区域所属的基坑ID及其ID的数据等</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.Rolling(System.DateTime)">
	<summary>
 图形滚动的Rolling方法
 </summary>
	<param name="dateThisday">施工当天的日期</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.MoveExcavation(AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline,System.Single,System.DateTime)">
	<summary>
 根据每天不同的挖深情况，移动挖深线的位置
 </summary>
	<param name="ExcavationLineAndTextBox">表示挖深深度的直线，文本框中记录有“挖深”二字</param>
	<param name="depth">当天开挖深度</param>
	<param name="dateThisday">施工当天的日期</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.CurveRolling(System.DateTime,System.Boolean,System.DateTime)">
	<summary>
 绘制距选定的日期（包括选择的日期）最近的日期的监测数据
 </summary>
	<param name="dateThisDay">选定的施工日期</param>
	<param name="blnChosenDayFound">指示选定的日期是否在监测数据工作表中有对应的数据</param>
	<param name="Closestday">距离选定日期最近的日期，如果选定的日期在工作表中有数据，则等效于dateThisDay</param>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.Legend_Location">
	<summary>
 重写基类的属性：图例框的尺寸与位置
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.ConstructNewTag(AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline.SeriesTag_Incline,Microsoft.Office.Interop.Excel.Series)">
	<summary>
 为新的数据列创建其对应的Tag，并且在Excel的绘图中复制出对应的表示开挖深度的深度线与文本框。
 </summary>
	<param name="SourceTag">用以参考的数据系列的Tag信息</param>
	<param name="newSeries">复制出来的新的数据系列</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Incline">
	<summary>
 测斜数据的曲线图
 </summary>
	<remarks></remarks>
</member><member name="P:AME.Miscellaneous.mySettings_UI.WindowState">
	<summary>
 主程序界面的窗口状态
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.Miscellaneous.mySettings_UI.WindowLocation">
	<summary>
 主程序界面的窗口位置
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.Miscellaneous.mySettings_UI.WindowSize">
	<summary>
 主程序界面的窗口尺寸
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.Miscellaneous.mySettings_UI">
	<summary>
 与程序的UI显示相关的属性
 </summary>
	<remarks></remarks>
</member><member name="P:AME.Miscellaneous.mySettings_Application.MonitorPointsInfo">
	<summary>
 在Visio中的绘制监测点位信息时所需要的参数值
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.WorkBook_ExportedTo">
	<summary>
 放置提取后的数据的工作簿
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.arrWkbk">
	<summary>
 要进行提取的工作簿
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.listRangeInfo">
	<summary>
 每一个工作簿中要进行提取的工作表，并用来索引此工作表中的Range范围
 </summary>
	<remarks>集合中的Worksheet对象对应的是保存数据的工作簿中的工作表对象。</remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.ParseDateFromFilePath">
	<summary>
 是否要分析出提取数据的工作簿中的日期数据
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.ExportToWorksheet.#ctor(Microsoft.Office.Interop.Excel.Workbook,System.String[],System.Collections.Generic.List{AME.frmDeriveDataFromExcel.ExportToWorksheet.RangeInfoForExport},System.Boolean)">
	<summary>
 构造函数
 </summary>
	<param name="WorkBook_ExportedTo">放置提取后的数据的工作簿</param>
	<param name="arrWkbk">要进行提取的工作簿</param>
	<param name="listRangeInfo">每一个工作簿中要进行提取的工作表，并用来索引此工作表中的Range范围</param>
	<param name="ParseDateFromFilePath">是否要分析出提取数据的工作簿中的日期数据</param>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.RangeInfoForExport.sheet">
	<summary>
 要保存到的工作表对象，也是每一个数据工作簿中要进行检索的工作表对象
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.RangeInfoForExport.strRange">
	<summary>
 工作表中进行提取的数据范围
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ExportToWorksheet.RangeInfoForExport.ColumnsCount">
	<summary>
 每一种要提取的数据范围的列数，即Range.Columns.Count的值
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.ExportToWorksheet.RangeInfoForExport.#ctor(Microsoft.Office.Interop.Excel.Worksheet,System.String,System.Int32)">
	<summary>
 构造函数
 </summary>
	<param name="sheet">要保存到的工作表对象，也是每一个数据工作簿中要进行检索的工作表对象</param>
	<param name="strRange">工作表中进行提取的数据范围</param>
	<param name="ColumnsCount">每一种要提取的数据范围的列数，即Range.Columns.Count的值</param>
	<remarks></remarks>
</member><member name="T:AME.frmDeriveDataFromExcel.ExportToWorksheet.RangeInfoForExport">
	<summary>
 每一个工作簿中要提取的Range对象的信息
 </summary>
	<remarks></remarks>
</member><member name="T:AME.frmDeriveDataFromExcel.ExportToWorksheet">
	<summary>
 在用后台线程提取所有的工作表的数据时，进行传递的参数
 </summary>
	<remarks>此结构中包含了要进行数据提取的所有文档以及工作表和Range信息</remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.cstErrorInfoFileName">
	<summary>
 记录异常信息的文本的名称
 </summary>
	<remarks>其文件夹路径与输出数据的Excel工作簿的路径相同</remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.cstRowNum_ColumnTitle">
	<summary>
 每一列数据的表头信息所在的行，一般为第一行，一般为数据对应的日期
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.cstRowNum_FirstData">
	<summary>
 提取的数据中的第一行在工作表中所要放置的行号，一般为第3行。第一行一般用来放数据对应的日期，第二行一般为预留行。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.cstColNum_FirstData">
	<summary>
 提取的数据中的第一列在工作表中所要放置的列号，一般为第2列。第1列用来放数据的说明
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.F_ExcelApp">
	<summary>
 用于操作数据的Excel程序
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.F_WorkBook_ExportedTo">
	<summary>
 保存提取后的数据的工作簿
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.F_ErrorList">
	<summary>
 异常信息的集合
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromExcel.ProgressTimer">
	<summary>
 定时触发器
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.DeriveDataFromExcel_Load(System.Object,System.EventArgs)">
	<summary>
 窗体的加载
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.frmDeriveDataFromWord_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 鼠标移出控件时隐藏
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.frmDeriveDataFromExcel_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 点击ESC时关闭窗口
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.frmDeriveDataFromWord_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 在窗口关闭前，关闭进行数据处理的Excel与Word程序
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.AddFile(System.Object,System.EventArgs)">
	<summary>
 以选择文件的形式向列表中添加文件
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.lbAddDir_Click(System.Object,System.EventArgs)">
	<summary>
 以选择文件夹的形式向列表中添加文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.btnRemove_Click(System.Object,System.EventArgs)">
	<summary>
 从列表框中移除选择的工作簿
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.btnExport_Click(System.Object,System.EventArgs)">
	<summary>
 开始输出数据
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.GetExactWorksheet(Microsoft.Office.Interop.Excel.Workbook,System.Collections.Generic.List{System.String},System.String)">
	<summary>
 获取工作簿中的工作表对象
 </summary>
	<param name="wkbk">工作表所在的工作簿</param>
	<param name="SheetName">工作表的名称</param>
	<remarks>如果此工作表已经在工作簿中出现，则返回对应的工作表，否则，创建一个新的工作表，
 并将新工作表名称添加到已经存在的工作表名称列表中</remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.GetContainedWorksheet(Microsoft.Office.Interop.Excel.Workbook,System.String[],System.String)">
	<summary>
 获取工作簿中的工作表对象，如果此工作表已经在工作簿中出现，则返回对应的工作表，否则，返回Nothing。
 </summary>
	<param name="wkbk">工作表所在的工作簿</param>
	<param name="ExistedSheetsName">工作簿中已经存在的工作表的名称的集合</param>
	<param name="SheetName">工作表的名称</param>
	<remarks>比较的依据：1、忽略大小写，2、要检索的工作表的名称的字符串是包含于已经存在的工作表名称的字符串的。</remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.GetColumnTitle(System.String,System.Boolean)">
	<summary>
 由工作簿的路径返回此组数据的表头信息
 </summary>
	<param name="FilePath">返回表头数据的依据：工作簿的路径</param>
	<param name="ParseDateFromFilePath">是否要分析出提取数据的工作簿中的日期数据</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.ExportData(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Worksheet,System.String,System.Int32,System.String)">
	<summary>
 正式开始提取数据
 </summary>
	<param name="shtExtractFrom">要进行数据提取的工作表</param>
	<param name="shtExportTo">放置提取的数据的工作表</param>
	<param name="strRange">提取的数据区间</param>
	<param name="ColNumToBeAdded">要放置的数据Range的第一个列号</param>
	<param name="ColumnTitle">每一个Range数据的表头信息</param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.BackgroundWorker1_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
	<summary>
 操作完成，关闭Excel程序，写入异常信息，并控件进度条的显示
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.ReportError(System.Object)">
	<summary>
 将异常信息的集合写入文本中
 </summary>
	<param name="Parameters">新线程中的输入参数，它是一个有两个元素的数组，
 其中第1个元素代表异常信息文件的路径，第二个代表收集了异常信息的List集合</param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromExcel.ProgressTimer_Tick(System.Object,System.EventArgs)">
	<summary>
 在定时器触发时将进度条的值设置为0
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.PointsInfoForExport.PointTag">
	<summary>
 文档中要进行提取的测点标签
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.PointsInfoForExport.SearchOrder">
	<summary>
 进行搜索的方向：按行或者按列，即下一个搜索单元格是按行还是按列的方向前进。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.PointsInfoForExport.Offset">
	<summary>
 在Word文档中，测点所对应的数据距离测点单元格的水平偏移位置。
 如数据单元格是在测点标签单元格的左边且紧靠标签单元格，则Offset的值为+1。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.PointsInfoForExport.ColNumToBeWritten">
	<summary>
 要在excel最终保存数据的工作表中写入数据的列号，即此列前面的行都已经被写入或者是预留的空行。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.PointsInfoForExport.RowNumToBeWritten">
	<summary>
 要在excel最终保存数据的工作表中写入数据的行号，即此行上面的行都已经被写入或者是预留的空行。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.PointsInfoForExport.ColumnsCountToBeAdd">
	<summary>
 每一组提取数据所占据的列数。从数据提取上来看，此字段并没有什么作用，因为一般情况下，它的值都应该是2。
 但是从表格的设计上来看，它的值可以用来腾出空的列以放置其他数据。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.PointsInfoForExport.#ctor(System.String,System.Int32,Microsoft.Office.Interop.Excel.XlSearchOrder)">
	<summary>
 构造函数
 </summary>
	<param name="PointTag">文档中要进行提取的测点标签</param>
	<param name="Offset">测点所对应的数据距离测点单元格的水平偏移位置。
 如数据单元格是在测点标签单元格的左边且紧靠标签单元格，则Offset的值为+1。</param>
	<param name="SearchOrder">进行搜索的方向：按行或者按列，即下一个搜索单元格是按行还是按列的方向前进。</param>
	<remarks></remarks>
</member><member name="T:AME.frmDeriveDataFromWord.PointsInfoForExport">
	<summary>
 每一个文档中要提取的测点及数据的位置信息
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.ExportToWorksheet.WorkBook_ExportedTo">
	<summary>
 放置提取后的数据的工作簿
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.ExportToWorksheet.arrDocsPath">
	<summary>
 要进行提取的Word文档
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.ExportToWorksheet.ParseDateFromFilePath">
	<summary>
 是否要分析出提取数据的工作簿中的日期数据
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.ExportToWorksheet.BufferSheet">
	<summary>
 用来暂时保存数据的Excel工作表对象。在提取每一个文档的数据时，
 先将文档中的表格复制到Excel中的此暂存工作表中，然后对于此工作表中的内容进行搜索。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.ExportToWorksheet.#ctor(Microsoft.Office.Interop.Excel.Workbook,System.String[],System.Boolean,Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 构造函数
 </summary>
	<param name="WorkBook_ExportedTo">放置提取后的数据的工作簿</param>
	<param name="arrDocsPath">要进行提取的所有word文档的绝对路径</param>
	<param name="ParseDateFromFilePath">是否要分析出提取数据的工作簿中的日期数据</param>
	<remarks></remarks>
</member><member name="T:AME.frmDeriveDataFromWord.ExportToWorksheet">
	<summary>
 在用后台线程提取所有的工作表的数据时，进行传递的参数
 </summary>
	<remarks>此结构中包含了要进行数据提取的所有文档，
 以及每个文档中进行提取的测点和对应数据的位置标签信息。</remarks>
</member><member name="F:AME.frmDeriveDataFromWord.cstErrorInfoFileName">
	<summary>
 记录异常信息的文本的名称
 </summary>
	<remarks>其文件夹路径与输出数据的Excel工作簿的路径相同</remarks>
</member><member name="F:AME.frmDeriveDataFromWord.cstRowNum_ColumnTitle">
	<summary>
 每一列数据的表头信息所在的行，一般为第一行，一般为数据对应的日期
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.cstRowNum_FirstData">
	<summary>
 提取的数据中的第一行在工作表中所要放置的行号，一般为第3行。第一行一般用来放数据对应的日期，第二行一般为预留行。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.cstColNum_FirstData">
	<summary>
 提取的数据中的第一列在工作表中所要放置的列号，一般为第2列。第1列用来放数据的说明
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.cstColumnsCountToBeAdded">
	<summary>
 每一组提取数据所占据的列数。从数据提取上来看，此字段并没有什么作用，因为一般情况下，它的值都应该是2。
 但是从表格的设计上来看，它的值可以用来腾出空的列以放置其他数据。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.F_ExcelApp">
	<summary>
 保存数据的Excel程序
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.F_WordApp">
	<summary>
 从Word文档中提取数据
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.F_WorkBook_ExportedTo">
	<summary>
 保存提取后的数据的工作簿
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.F_ErrorList">
	<summary>
 异常信息的集合
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.ProgressTimer">
	<summary>
 定时触发器，用来将进度滚动条的值设置为0
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.F_BufferSheet">
	<summary>
 用来暂时保存数据的Excel工作表对象。在提取每一个文档的数据时，
 先将文档中的表格复制到Excel中的此暂存工作表中，然后对于此工作表中的内容进行搜索。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.F_DicPointsInfo">
	<summary>
 每一个文档中要进行提取的测点标签，和与之对应的数据的相对偏移位置。
 </summary>
	<remarks>集合中的Worksheet对象对应的是保存数据的工作簿中的工作表对象。</remarks>
</member><member name="M:AME.frmDeriveDataFromWord.DeriveDataFromWord_Load(System.Object,System.EventArgs)">
	<summary>
 窗体的加载
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.frmDeriveDataFromExcel_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 点击ESC时关闭窗口
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.frmDeriveDataFromWord_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
	<summary>
 鼠标移出控件时隐藏
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.frmDeriveDataFromWord_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 在窗口关闭前，关闭进行数据处理的Excel与Word程序
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:AME.frmDeriveDataFromWord.blnIsBeingExtracting">
	<summary>
 逻辑值，指示此时是否正在进行数据的提取操作。
 这是为了应对在程序数据提取时引发的word文档关闭与用户手动关闭Word文档时的区别对待。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.AddFile(System.Object,System.EventArgs)">
	<summary>
 以选择文件的形式向列表中添加文件
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.lbAddDir_Click(System.Object,System.EventArgs)">
	<summary>
 以选择文件夹的形式向列表中添加文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.btnRemove_Click(System.Object,System.EventArgs)">
	<summary>
 从列表框中移除选择的工作簿
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.MyDataGridView1_RowsAdded(System.Object,System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
	<summary>
 在DataGridView中，添加新行时，将其搜索方向设置为“按行”。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.btnExport_Click(System.Object,System.EventArgs)">
	<summary>
 开始输出数据
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.StartToDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
	<summary>
 在后台线程中执行操作
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.GetColumnTitle(System.String,System.Boolean)">
	<summary>
 由工作簿的路径返回此组数据的表头信息
 </summary>
	<param name="FilePath">返回表头数据的依据：工作簿的路径</param>
	<param name="ParseDateFromFilePath">是否要分析出提取数据的工作簿中的日期数据</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.ExportData(Microsoft.Office.Interop.Word.Table)">
	<summary>
  !!! 正式开始提取数据
 </summary>
	<param name="DataTableInWord">进行数据提取的word中的表格Table对象</param>
	<remarks>提取的基本思路：已有一个doc对象，并对其中的一个测点进行提取。</remarks>
</member><member name="M:AME.frmDeriveDataFromWord.BackgroundWorker1_ProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
	<summary>
 报告进度
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.BackgroundWorker1_RunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
	<summary>
 操作完成，关闭Excel程序，写入异常信息，并控件进度条的显示
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.ReportError(System.Object)">
	<summary>
 将异常信息的集合写入文本中
 </summary>
	<param name="Parameters">新线程中的输入参数，它是一个有两个元素的数组，
 其中第1个元素代表异常信息文件的路径，第二个代表收集了异常信息的List集合</param>
	<remarks></remarks>
</member><member name="M:AME.frmDeriveDataFromWord.ProgressTimer_Tick(System.Object,System.EventArgs)">
	<summary>
 在定时器触发时将进度条的值设置为0
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.Miscellaneous.DiaFrm_LockDelete.ShowDialog(System.DateTime)">
	<summary>
 打开对话框
 </summary>
	<param name="seriesDate">双击时指定的Excel数据系列对应的日期</param>
	<returns>选择的操作方式：lock、delete、ignore</returns>
	<remarks></remarks>
</member><member name="E:AME.AME_UserControl.AddFileOrDirectoryFiles.AddFile">
	<summary>
 添加文件
 </summary>
	<remarks></remarks>
</member><member name="E:AME.AME_UserControl.AddFileOrDirectoryFiles.AddFilesFromDirectory">
	<summary>
 批量添加文件夹中的指定文件
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.AddFileOrDirectoryFiles.HideLabel">
	<summary>
 提供给外部调用，用来从外部隐藏“添加文件”与“添加文件夹”两个标签
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.AddFileOrDirectoryFiles._AddFile(System.Object,System.EventArgs)">
	<summary>
 添加文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.AddFileOrDirectoryFiles._AddDire(System.Object,System.EventArgs)">
	<summary>
 添加文件夹中的文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:AME.AME_UserControl.AddFileOrDirectoryFiles">
	<summary>
 自定义控件：用来添加文件或者批量添加文件夹中的指定文件
 </summary>
	<remarks></remarks>
</member><member name="E:AME.AMEProject.frmProjectFile.WorkBookInProjectChanged">
	<summary>
 工作簿列表框中的工作簿对象发生变化时触发的事件
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.frmProjectFile.cstValueMember">
	<summary>
 列表框的DataSource中用来表示Value的属性名
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.frmProjectFile.cstDisplayMember">
	<summary>
 列表框的DataSource中用来显示在UI界面中的DisplayMember的属性名
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.frmProjectFile.P_ProjectState">
	<summary>
 窗口打开时的作用状态
 </summary>
	<remarks></remarks>
</member><member name="P:AME.AMEProject.frmProjectFile.ProjectState">
	<summary>
 窗口打开时的作用状态
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.AMEProject.frmProjectFile.F_FileContents">
	<summary>
 窗口中的界面所反映出的项目文件内容。
 此变量是为了在窗口中点击确认的时候赋值给主程序，
 而如果窗口不点击确定的话，主程序的变量就不会被更新。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.frmProjectContents_Load(System.Object,System.EventArgs)">
	<summary>
 窗口加载
 </summary>
</member><member name="M:AME.AMEProject.frmProjectFile.BindProperty">
	<summary>
 为列表框绑定文本显示与数据的属性值
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.FileContentsToUI(AME.AMEProject.clsProjectFile)">
	<summary>
 在打开窗口时将主程序中的ProjectFile对象的信息反映到窗口的控件中
 </summary>
	<param name="ProjectFile"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.UIToFileContents">
	<summary>
 将窗口界面中的工作簿与工作表信息收集到FileContents中
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.btnAddWorkbook_Click(System.Object,System.EventArgs)">
	<summary>
 在项目中添加数据库的工作簿
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.BtnRemoveWorkbook_Click(System.Object,System.EventArgs)">
	<summary>
 在项目中移除数据库工作簿
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>在从列表框中移除项目时，一定要注意，由于集合的数据结构，所以删除时要从后面的开始删除，
 否则可能会出现索引不到的情况。</remarks>
</member><member name="M:AME.AMEProject.frmProjectFile._WorkBookInProjectChanged(System.Object,System.Boolean)">
	<summary>
 项目中的数据库工作簿发生变化时的事件
 </summary>
	<param name="sender"></param>
	<param name="clearListBox_Progress">是否要清空项目文件中的施工进度列表框中的内容</param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.ListControlRefresh(System.Collections.Generic.List{AME.Miscellaneous.LstbxDisplayAndItem},AME.FileContents)">
	<summary>
 项目中的数据库工作簿发生变化时，更新窗口中的相关列表框中的数据对象
 </summary>
	<param name="lstAllsheet"></param>
	<param name="FileContents"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.SheetToComboBox(System.Windows.Forms.ComboBox,Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 将项目文件中的工作表添加到组合列表框中
 </summary>
	<param name="cmbx">进行添加的组合列表框</param>
	<param name="destinationSheet">要添加到组合列表框中的工作表对象</param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.BtnAddSheet_Click(System.Object,System.EventArgs)">
	<summary>
 在项目中添加施工进度工作表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.BtnRemoveSheet_Click(System.Object,System.EventArgs)">
	<summary>
 在项目中移除施工进度工作表
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.CmbbxProgressWkbk_SelectedValueChanged(System.Object,System.EventArgs)">
	<summary>
 工作簿的组合列表框的选择项发生变化时，更新施工进度工作表的列表框
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.btnOk_Click(System.Object,System.EventArgs)">
	<summary>
 将界面中的内容保存到XML文档中
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AMEProject.frmProjectFile.PanelFather_MouseEnter(System.Object,System.EventArgs)">
	<summary>
 鼠标移动进Panel时引发的事件。
 </summary>
	<remarks>此时将Panel设置为获得焦点。</remarks>
</member><member name="T:AME.AMEProject.frmProjectFile">
	<summary>
 对项目文件进行操作的窗口，比如新建项目、打开项目、编辑项目等
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Visio_DataRecordsetLinkToShape.F_vsoDoc">
	<summary>
 进行形状链接的文档
 </summary>
	<remarks></remarks>
</member><member name="P:AME.Visio_DataRecordsetLinkToShape.vsoDoc">
	<summary>
 进行形状链接的文档，设置此属性时会触发vsoDocumentChanged事件
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="E:AME.Visio_DataRecordsetLinkToShape.vsoDocumentChanged">
	<summary>
 当进行数据链接的Visio文档发生改变时触发
 </summary>
	<remarks></remarks>
</member><member name="E:AME.Visio_DataRecordsetLinkToShape.ShapeIDValidated">
	<summary>
 在Visio文档通过验证，表示可以进行数据链接之时触发
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Visio_DataRecordsetLinkToShape.F_vsoApplication">
	<summary>
 Visio的Application对象，此对象不包含在“群坑分析”的主程序中的那个Visio的Application对象
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Visio_DataRecordsetLinkToShape.F_vsoPage">
	<summary>
 进行形状链接的绘图页面
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Visio_DataRecordsetLinkToShape.F_vsoDataRs">
	<summary>
 进行链接的数据记录集
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Visio_DataRecordsetLinkToShape.F_IndexOfShapeID">
	<summary>
 在数据记录集中标识“形状ID”的字段列的下标值。在数据记录集中，每一行中的第一列（个）数据的下标值为0。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.GetPagesFromDoc(Microsoft.Office.Interop.Visio.Document)">
	<summary>
 从Visio文档中返回其中的所有Page对象的数组
 </summary>
	<param name="Doc"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.GetDataRsFromDoc(Microsoft.Office.Interop.Visio.Document)">
	<summary>
 从Visio文档中返回其中的所有DataRecordset对象的数组
 </summary>
	<param name="Doc"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.GetColumnsFromDataRS(Microsoft.Office.Interop.Visio.DataRecordset)">
	<summary>
 从Visio文档的数据记录集中返回其中的字段列对象的数组
 </summary>
	<param name="DRS"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.BtnChooseVsoDoc_Click(System.Object,System.EventArgs)">
	<summary>
 选择新的Visio文档
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.ValidateShapes(Microsoft.Office.Interop.Visio.Page,Microsoft.Office.Interop.Visio.DataRecordset,System.Int32)">
	<summary>
 验证页面中是否包含所有位于数据记录集中所记录的形状ID。
 </summary>
	<param name="page"></param>
	<param name="DRS"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.PassDataRecordsetToShape(Microsoft.Office.Interop.Visio.DataRecordset,Microsoft.Office.Interop.Visio.Page,System.Int16,System.Boolean)">
	<summary>
 将Visio中的外部数据链接到Page中的指定形状。
 此操作的作用：通过Visio的数据图形功能，在对应的形状上显示出它所链接的数据，比如此图形对应的开挖深度。
 </summary>
	<param name="DataRS">数据链接的源数据记录集</param>
	<param name="Page">要进行数据链接的形状所在的Page</param>
	<param name="ColumnIndex_PrimaryKey">在数据记录集中，用来记录形状的名称的数据所在的列号。如果是第一列，则为0.</param>
	<param name="DeleteDataRecordset">是否要在数据记录集的数据链接到形状后，将此数据记录集删除。</param>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.DocumentChanged(Microsoft.Office.Interop.Visio.Document)">
	<summary>
 Visio文档改变
 </summary>
	<param name="vsoDoc"></param>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.Visio_DataRecordsetLinkToShape_ShapeIDValidated">
	<summary>
 形状ID验证成功
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.F_vsoApplication_BeforeQuit(Microsoft.Office.Interop.Visio.Application)">
	<summary>
 Visio程序关闭
 </summary>
	<param name="app"></param>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.F_vsoDoc_BeforeDocumentClose(Microsoft.Office.Interop.Visio.Document)">
	<summary>
 Visio文档关闭
 </summary>
	<param name="Doc"></param>
	<remarks></remarks>
</member><member name="T:AME.Visio_DataRecordsetLinkToShape.BeforeDocumentCloseHander">
	<summary>
 委托：在主程序界面上清空列表框的显示
 </summary>
	<remarks></remarks>
</member><member name="M:AME.Visio_DataRecordsetLinkToShape.ClearUI">
	<summary>
 在主程序界面上清空列表框的显示
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Visio_DataRecordsetLinkToShape">
	<summary>
 Excel数据到Visio形状
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.IAllDrawings.Type">
	<summary>
 图表的类型，根据图表类型、监测数据类型的不同，每一种不同的图表都有不同的类型
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.IAllDrawings.UniqueID">
	<summary>
 图表的全局独立ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks>以当时时间的Tick属性来定义</remarks>
</member><member name="M:AME.All_Drawings_In_Application.IAllDrawings.Close(System.Boolean)">
	<summary>
 关闭绘图的文档以及其所在的Application程序
 </summary>
	<param name="SaveChanges">在关闭文档时是否保存修改的内容</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.IAllDrawings">
	<summary>
 程序中的所有类型的图表，包括剖面图、平面图以及各种监测曲线图
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.IRolling.DateSpan">
	<summary>
 进行同步滚动的日期跨度，用来给出时间滚动条与日历的范围。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.IRolling.Rolling(System.DateTime)">
	<summary>
 图形随着施工进度的变化而发生的相应的滚动
 </summary>
	<param name="dateThisDay">进行滚动的日期</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.IRolling">
	<summary>
 接口，用来进行图形随着施工进度的变化而发生的相应的滚动
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.DrawingType.Monitor_Dynamic">
	<summary>
 动态监测曲线图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.DrawingType.Monitor_Static">
	<summary>
 静态监测曲线图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.DrawingType.Monitor_Incline">
	<summary>
 测斜曲线图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.DrawingType.Vso_PlanView">
	<summary>
 开挖平面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.DrawingType.Xls_SectionalView">
	<summary>
 开挖剖面图
 </summary>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.DrawingType">
	<summary>
 枚举程序中的图表的类型
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ChartSize.ChartHeight">
	<summary>
 画布的高度
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ChartSize.ChartWidth">
	<summary>
 画布的宽度
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ChartSize.MarginOut_Height">
	<summary>
 由画布边界扩展到Excel界面的尺寸的高度的增量
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ChartSize.MarginOut_Width">
	<summary>
 由画布边界扩展到Excel界面的尺寸的宽度的增量
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ChartSize.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
	<summary>
 构造函数
 </summary>
	<param name="ChartHeight">画布的高度</param>
	<param name="ChartWidth">画布的宽度</param>
	<param name="MarginOut_Height">由画布边界扩展到Excel界面的尺寸的高度的增量</param>
	<param name="MarginOut_Width">由画布边界扩展到Excel界面的尺寸的宽度的增量</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ChartSize">
	<summary>
 此结构有四个元素，分别代表：画布的高度、宽度；由画布边界扩展到Excel界面的尺寸的高度和宽度的增量
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.ChartSize_sugested">
	<summary>
 绘图界面与画布的尺寸
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.P_DateSpan">
	<summary>
 静态曲线图中，整个施工阶段的时间跨度。（并不是用来进行动态滚动，只是为了提取相应的信息值。）
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.DateSpan">
	<summary>
 静态曲线图中，整个施工阶段的时间跨度。（并不是用来进行动态滚动，只是为了提取相应的信息值。）
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.arrAllselectedData">
	<summary>
 所有"选择的"监测点位的监测数据的大数组。其中不包含选择的测点编号信息与施工日期的信息
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.AllselectedData">
	<summary>
 所有"选择的"监测点位的监测数据的大数组。其中不包含选择的测点编号信息与施工日期的信息
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.arrAllDate">
	<summary>
 此工作表中的整个施工日期的数组（0-Based，数据类型为Date）
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.AllDate">
	<summary>
 此工作表中的整个施工日期的数组（0-Based，数据类型为Date）
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.textbox_Info">
	<summary>
 记录数据信息的文本框
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.Information">
	<summary>
 记录数据信息的文本框
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.currentPointsCount">
	<summary>
 Excel图表中，静态曲线图的数据系列中，每条曲线中所显示的数据点个数
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_Static.#ctor(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Chart,AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing,AME.Miscellaneous.DateSpan,AME.All_Drawings_In_Application.DrawingType,System.Boolean,System.Object[0:,0:],System.DateTime[],Microsoft.Office.Interop.Excel.TextFrame2)">
	<summary>
 构造函数
 </summary>
	<param name="DataSheet"></param>
	<param name="DrawingChart"></param>
	<param name="ParentApp">此图表所在的Excel类的实例对象</param>
	<param name="DateSpan">静态曲线图中，整个施工阶段的时间跨度。（并不是用来进行动态滚动，只是为了提取相应的信息值。）</param>
	<param name="type"></param>
	<param name="CanRoll"></param>
	<param name="AllselectedData"></param>
	<param name="AllDateRange"></param>
	<param name="Info"></param>
	<remarks></remarks>
</member><member name="F:AME.Constants.AMEApplication.FileExtension">
	<summary>
 项目文件的后缀名，后缀字符中包含了"."
 </summary>
	<remarks>用IO.Path.GetExtension返回的文件后缀，后缀字符中包含了"."。</remarks>
</member><member name="F:AME.Constants.AMEApplication.ProcessName_Visio">
	<summary>
 在System.Diagnostics.Process.GetProcessesByName()方法中，
 用来获取当前系统中已经打开的所有Visio进程
 </summary>
	<remarks>用System.Diagnostics.Process.GetProcessesByName("VISIO")，
 来获取当前系统中已经打开的所有Visio进程</remarks>
</member><member name="T:AME.Constants.AMEApplication">
	<summary>
 与程序相关的一些参数，与具体的项目没有任何关系
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Project.Elevation_GroundSurface">
	<summary>
 工程项目的自然地面的标高值
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Project.identifier_struts">
	<summary>
 在数据库中用于标识支撑构件的字符
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Project.identifier_Floor">
	<summary>
 在数据库中用于标识楼板构件的字符
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Project.identifier_ExcavationBottom">
	<summary>
 在数据库中用于标识基坑的底部的字符
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Project.identifier_bottomFloor">
	<summary>
 在数据库中用于标识基坑的底部的字符
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Project.cm2pt">
	<summary>
 长度单位厘米到磅的转换系数，即1cm对应n个磅值
 </summary>
	<remarks>后面的除1.3表示将图形缩小1.3位</remarks>
</member><member name="F:AME.Constants.Project.eleTop">
	<summary>
 在“剖面标高”的工作表中，所有标高项目中的最高位置的标高值
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Project">
	<summary>
 针对于整个项目的一些全局性的常数值
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.FolderOrFileName.Folder">
	<summary>
 文件夹名称
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.FolderOrFileName.File_Template">
	<summary>
 “模板”文件存放的文件夹名称
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.FolderOrFileName.SourceFile">
	<summary>
 数据库源文件存放的文件夹名称
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.FolderOrFileName">
	<summary>
 文件夹或文件的名称(不是指它们的路径)
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.ParagraphStyle">
	<summary>
 Word中的段落样式
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.DrawingItem">
	<summary>
 各种图形所属的图形种类的名称
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.AxisTitle">
	<summary>
 坐标轴的标题值
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Drawing_SectionalView">
	<summary>
 开挖剖面图的绘图格式
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Mnt_RollingBase.Legend_Width">
	<summary>
 图例形状的宽度，以磅为单位
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Mnt_RollingBase.Legend_Height">
	<summary>
 图例形状的高度，以磅为单位
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Drawing_Mnt_RollingBase">
	<summary>
 进行动态滚动的监测数据曲线图的绘图格式
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Mnt_Others.ChartHeight">
	<summary>
 图表Chart的高度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Mnt_Others.ChartWidth">
	<summary>
 图表Chart的宽度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Mnt_Others.MarginOut_Width">
	<summary>
 Chart外边缘到Excel界面外边缘的距离
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Mnt_Others.MarginOut_Height">
	<summary>
 Chart外边缘到Excel界面外边缘的距离
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Drawing_Mnt_Others">
	<summary>
 其他监测数据图的图表界面的尺寸
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.ChartHeight">
	<summary>
 图表Chart的高度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.ChartWidth">
	<summary>
 图表Chart的宽度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.MarginOut_Width">
	<summary>
 Chart外边缘到Excel界面外边缘的距离
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.MarginOut_Height">
	<summary>
 Chart外边缘到Excel界面外边缘的距离
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.AxisParts_X_Displacement">
	<summary>
 图表X轴（位移）划分的区段数
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.AxisMajorUnit_Y">
	<summary>
 图表Y轴（测斜深度）的最大刻度值
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.Legend_Width">
	<summary>
 图例形状的宽度，以磅为单位
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Drawing_Incline.Legend_Height">
	<summary>
 图例形状的高度，以磅为单位
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Drawing_Incline">
	<summary>
 测斜曲线图的绘图格式
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Incline.RowNumForDate">
	<summary>
 记录施工日期的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Incline.RowNum_FirstData_WithoutDate">
	<summary>
 定义监测数据中的数据区域（包含x轴的深度数据）的起始单元格的位置：一般为“A3”
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Incline.ColNum_Depth">
	<summary>
 第一列数据即是数据标签，比如测斜数据工作表中的深度列
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Incline.ColNum_FirstData_Displacement">
	<summary>
 测斜位移值所在的第一列，也对应了第一个监测日期所在的列号
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Mnt_Incline">
	<summary>
 监测数据中的测斜数据
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Mnt_AxialForce">
	<summary>
 监测数据中的支撑轴力
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Others.RowNumForDate">
	<summary>
 记录施工日期的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Others.RowNum_FirstData_WithoutDate">
	<summary>
 定义监测数据中的数据区域（包含x轴的深度数据）的起始单元格的位置：一般为“A3”
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Others.ColNum_PointsTag">
	<summary>
 第一列数据即是数据标签，比如测斜数据工作表中的深度列，或者是其他数据类型的测点编号所在列
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.Mnt_Others.ColNum_FirstData_Displacement">
	<summary>
 第一个监测数据所在列号
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.Mnt_Others">
	<summary>
 监测数据中，除测斜数据与支撑轴力以外的监测数据
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Sectional.RowNum_ID">
	<summary>
 工作表中记录基坑ID信息的单元格所在的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Sectional.ColNum_FirstID">
	<summary>
 工作表中第一个基坑ID值的单元格的列号，此单元格一般位于合并单元格内，
 返回的列号是合并单元格中的第一个单元格的列号。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Sectional.RowNum_FirstItem">
	<summary>
 工作表中记录的第一个结构构件所在的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Sectional.RowNum_EndRowInElevation">
	<summary>
 工作表“剖面标高”中记录标高值的最后一行的行号，包括这一行
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.DB_Sectional">
	<summary>
 数据库文件中，剖面标高项的数据格式
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.RowNum_ExcavTag">
	<summary>
 每个工作表对应的基坑的地块名称（如：A1、B、C1等）
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.RowNum_ExcavPosition">
	<summary>
 每一个不同方位的基坑区域的标签（比如：普遍区域、东侧）
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.RowNum_ExcavID">
	<summary>
 记录基坑ID的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.RowNum_BottomDate">
	<summary>
 基坑区域开挖到坑底标高时的日期
 </summary>
	<remarks>用来在绘制剖面标高的矩形时，
 根据当天是否已经开挖到坑底来设置矩形形状的颜色与构件标志的线形等</remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.RowNum_TheFirstDay">
	<summary>
 第一个日期所在的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.ColNum_DateList">
	<summary>
 记录施工进度日期的数据列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_Progress.ColNum_theFirstRegion">
	<summary>
 记录的第一个基坑区域的列号
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.DB_Progress">
	<summary>
 数据库文件中的施工进度表
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_ExcavRegionForVisio.ColNum_ShapeID">
	<summary>
 工作表“开挖分块”中的“形状名”所在的列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_ExcavRegionForVisio.ColNum_FinishedDate">
	<summary>
 工作表“开挖分块”中的“完成日期”所在的列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Constants.Data_Drawing_Format.DB_ExcavRegionForVisio.RowNum_FirstShape">
	<summary>
 第一个形状数据所在的行号
 </summary>
	<remarks></remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format.DB_ExcavRegionForVisio">
	<summary>
 "开挖分块"工作表
 </summary>
	<remarks>用来记录Visio图形中每一个分块区域所对应的图形的形状ID，以及每一个分块图形相关的信息</remarks>
</member><member name="T:AME.Constants.Data_Drawing_Format">
	<summary>
 各种类型的Excel数据库工作表中，数据的排布格式，以及绘图的格式
 </summary>
	<remarks>这些常数只对于数据库的工作表的排布格式，以及绘图界面的UI显示格式进行定义，
 并不定义与具体的项目相关的任何的信息</remarks>
</member><member name="F:AME.frmRolling.F_blnFormHasLoaded">
	<summary>
 指示窗口是否已经加载。这的作用是在主程序启动时，会触发文本框的TextChanged事件，
 此时通过判断滚动窗口是否已经加载，来作出相应的操作。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.frmRolling.F_SelectedRollingDrawingsCount">
	<summary>
 所有列表框中选中的项目的总和
 </summary>
	<remarks></remarks>
</member><member name="P:AME.frmRolling.FocusOn_DateSpan">
	<summary>
 同步设置滚动条与日历的时间跨度值
 </summary>
	<value></value>
	<remarks>只写属性,代表滚动界面中选择的图表对象的时间跨度的最大并集</remarks>
</member><member name="P:AME.frmRolling.ThisDay">
	<summary>
 在滚动时记录的“当天”的日期值。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.frmRolling.CanRollByKeyPress">
	<summary>
 指示是否可以通过键盘的方向键来进行滚动
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.#ctor">
	<summary>
 构造函数
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.frmRolling_Load(System.Object,System.EventArgs)">
	<summary>
 窗体加载
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.frmRolling_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 窗体关闭之前的事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>在关闭窗口时将其隐藏</remarks>
</member><member name="M:AME.frmRolling.NumChanging_ValueAdded">
	<summary>
 日期的增加
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.NumChanging_ValueMinused">
	<summary>
 日期的后退
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.OnRollingDrawingsRefreshed">
	<summary>
 在此方法中，触发了滚动窗口的RollingDrawingsRefreshed事件：
 刷新滚动窗口中的列表框的数据与其UI显示
 </summary>
	<remarks></remarks>
</member><member name="E:AME.frmRolling.RollingDrawingsRefreshed">
	<summary>
 在整个程序中的可以滚动的图表发生增加或者减少时触发的事件：
 刷新滚动窗口中的列表框的数据与其UI显示
 </summary>
	<remarks></remarks>
</member><member name="T:AME.frmRolling.RefreshListBoxHandler">
	<summary>
 委托：在非UI线程中刷新窗口控件时，用Me.BeginInvoke来转到创建此窗口的线程中来执行。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.RefreshListBox">
	<summary>
 刷新窗口中的列表框的数据与其UI显示
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.frmRolling_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 通过键盘的方向键来进行图形的滚动
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.GroupBox1_Resize(System.Object,System.EventArgs)">
	<summary>
 窗口Resize时的事件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>协调三个列表框的宽度值</remarks>
</member><member name="M:AME.frmRolling.btnOutPut_Click(System.Object,System.EventArgs)">
	<summary>
 输出到Word
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.Refesh_FocusOn_TimeSpan">
	<summary>
 !!! 在每一次更改选择项是刷新滚动条和日历的时间跨度，以及终结旧线程，创建新的线程
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.RenewTimeSpan(System.Boolean@,AME.Miscellaneous.DateSpan,AME.Miscellaneous.DateSpan)">
	<summary>
 更新滚动窗口中的日期跨度
 </summary>
	<param name="blnDateSpanInitialized">引用类型，指示滚动窗口中是否已经有了最初的作为基准日期跨度的值</param>
	<param name="OldDateSpan">已经有的日期跨度的值</param>
	<param name="ObjectDateSpan">进行扩充的日期跨度</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.LabelDate_TextChanged(System.Object,System.EventArgs)">
	<summary>
 文本框的字符发生变化。此时根据具体情况触发StartRolling事件，以进行图形的滚动。 
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="E:AME.frmRolling.StartRolling">
	<summary>
 事件：开始进行图形滚动
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmRolling.Rolling(System.DateTime)">
	<summary>
 【关键】滚动时的执行方法
 </summary>
	<param name="ThisDay">进行滚动的当天的日期</param>
	<remarks>在进行滚动时，先判断是否还有线程没有执行完，如果有，则要先将未结束的线程取消掉，然后再重新启动线程。
 而线程的数量与调用的方法是不变的。</remarks>
</member><member name="M:AME.frmRolling.AbortAllThread(System.Threading.Thread[])">
	<summary>
 取消所有当前正在运行的线程
 </summary>
	<param name="Threads"></param>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_OtherDynamics.ChartSize_sugested">
	<summary>
 绘图界面与画布的尺寸
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Mnt_OtherDynamics.DateAndDatum">
	<summary>
 以每一天的日期来索引这一天的监测数据
 </summary>
	<value></value>
	<returns>返回一个字典，其关键字为监测数据表中有数据的每一天的日期，
 对应的值为当天每一个被选择的监测点的监测数据</returns>
	<remarks>监测数据只包含列表中选择了的监测点</remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_OtherDynamics.#ctor(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Chart,AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing,AME.Miscellaneous.DateSpan,AME.All_Drawings_In_Application.DrawingType,System.Boolean,System.Collections.Generic.Dictionary{System.DateTime,System.Object[]},Microsoft.Office.Interop.Excel.TextFrame2,AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SeriesTag)">
	<summary>
 构造函数
 </summary>
	<param name="DataSheet">图表对应的数据工作表</param>
	<param name="DrawingChart">Excel图形所在的Chart对象</param>
	<param name="ParentApp">此图表所在的Excel类的实例对象</param>
	<param name="DateSpan">此图表的TimeSpan跨度</param>
	<param name="CanRoll">是图表是否可以滚动，即是动态图还是静态图</param>
	<param name="Date_ChosenDatum">一个字典，其关键字为监测数据表中有数据的每一天的日期，
 对应的值为当天每一个被选择的监测点的监测数据，监测数据只包含列表中选择了的监测点</param>
	<param name="Info">记录数据信息的文本框</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_OtherDynamics.Rolling(System.DateTime)">
	<summary>
 图形滚动
 </summary>
	<param name="dateThisday"></param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Mnt_OtherDynamics.CurveRolling(System.DateTime,System.Boolean,System.DateTime)">
	<summary>
 绘制距选定的日期（包括选择的日期）最近的日期的监测数据
 </summary>
	<param name="dateThisDay">选定的施工日期</param>
	<param name="blnChosenDayFound">指示选定的日期是否在监测数据工作表中有对应的数据</param>
	<param name="Closestday">距离选定日期最近的日期，如果选定的日期在工作表中有数据，则等效于dateThisDay</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Mnt_OtherDynamics">
	<summary>
 监测曲线图中，除了测斜曲线图外，其他的可以动态滚动的曲线图。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.P_Key">
	<summary>
 此Excel监测曲线绘图窗口在主程序的集合中的关键字，用来在集合键值对中对此窗口进行索引
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.Key">
	<summary>
 此元素在其所在的集合中的键，这个键是在元素添加到集合中时自动生成的，
 所以应该在执行集合.Add函数时，用元素的Key属性接受函数的输出值。
 在集合中添加此元素：Me.Key=Me所在的集合.Add(Me)
 在集合中索引此元素：集合.item(me.key)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.ActiveMntDrawingSheet">
	<summary>
 在一个监测曲线绘图的Application的一个工作簿中，当前活动的那一个绘图工作表。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.F_ExcelProcess">
	<summary>
 Excel程序的进程对象，用来对此进程进行相差的操作，比如，关闭进程
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.#ctor(Microsoft.Office.Interop.Excel.Application)">
	<summary>
 构造函数
 </summary>
	<param name="Application">进行绘图的Excel绘图程序</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.AppQuit(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)">
	<summary>
 Excel程序关闭时触发的事件
 </summary>
	<param name="wkbk"></param>
	<param name="cancel"></param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing.RemoveFormCollection">
	<summary>
 将自己从所在的集合中删除
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsExcavationID.ExcavationBottom">
	<summary>
 基坑底部标高
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsExcavationID.BottomFloor">
	<summary>
 底板顶部标高
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsExcavationID.Components">
	<summary>
 记录基坑ID中对应的每一个构件项目与其对应标高的数组,
 数组中的第一列表示构件项目的名称，第二列表示构件项目的标高值
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsExcavationID.Name">
	<summary>
 此基坑ID的ID名，如“A1-1”
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.clsExcavationID.#ctor(System.String,System.Single,System.Single,System.String[0:,0:])">
	<summary>
 构造函数
 </summary>
	<param name="name">此基坑ID的ID名，如“A1-1”</param>
	<param name="pitBottom">基坑底部标高</param>
	<param name="bottomfloor">底板顶部标高</param>
	<param name="cmpnts">记录基坑ID下的结构构件及其标高的数组，
 数组中的第一列表示构件项目的名称，第二列表示构件项目对应的标高值</param>
	<remarks></remarks>
</member><member name="T:AME.ClsData_DataBase.clsExcavationID">
	<summary>
 在“剖面标高”工作表中，每一个基坑ID所对应的相关信息
 </summary>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.Range">
	<summary>
 基坑区域的施工进度中，每一个子区域对应的Range对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks>每一个Range对象代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.HasBottomDate">
	<summary>
 指示在数据库文件中，指定的开挖区域是否已经开挖到了基坑底
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.BottomDate">
	<summary>
 在数据库文件中，指定的开挖区域开挖到基坑底的日期
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.ExcavationID">
	<summary>
 基坑区域对应的基坑ID的信息
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.ExcavName">
	<summary>
 基坑区域所在的基坑的名称，如A1、B、C1等
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.clsProcessRegionData._ExcavPosition">
	<summary>
 基坑区域的分块名称，如普遍区域、东南侧、西侧等
 </summary>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.ExcavPosition">
	<summary>
 基坑区域的分块名称，如普遍区域、东南侧、西侧等
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.clsProcessRegionData.description">
	<summary>
 关于此基坑区域的描述，如“A1:普遍区域”
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.clsProcessRegionData.#ctor(System.String,System.String,AME.ClsData_DataBase.clsExcavationID,System.String,Microsoft.Office.Interop.Excel.Range)">
	<summary>
 构造函数
 </summary>
	<param name="ExcavName">基坑区域所在的基坑的名称，如A1、B、C1等</param>
	<param name="ExcavPosition">基坑区域的分块名称，如普遍区域、东南侧、西侧等</param>
	<param name="Range">基坑区域的施工进度中，每一个子区域对应的Range对象,
 每一个Range对象代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</param>
	<param name="ExcavationID">基坑区域对应的基坑ID的信息</param>
	<param name="strBottomDate">在数据库文件中，指定的开挖区域开挖到基坑底的日期，在构造函数中进行数据类型的转换</param>
	<remarks></remarks>
</member><member name="T:AME.ClsData_DataBase.clsProcessRegionData">
	<summary>
 在施工进度工作表中，每一个基坑区域相关的各种信息，比如区域名称，区域的描述，区域数据的Range对象，区域所属的基坑ID及其ID的数据等
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.ShapeID_FinishedDate.ShapeID">
	<summary>
 列举Visio绘图中所有开挖分块的形状的ID值的数组
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.ShapeID_FinishedDate.FinishedDate">
	<summary>
 每一个开挖分块所对应的开挖完成的日期
 </summary>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.ShapeID_FinishedDate.#ctor(System.Int32[],System.DateTime[])">
	<summary>
 构造函数，ShapeID与FinishedDate这两个数组中的元素个数必须相同，而且其中第一个元素的下标值为0。
 </summary>
	<param name="ShapeID">列举Visio绘图中所有开挖分块的形状的ID值的数组</param>
	<param name="FinishedDate">每一个开挖分块所对应的开挖完成的日期的数组</param>
	<remarks></remarks>
</member><member name="T:AME.ClsData_DataBase.ShapeID_FinishedDate">
	<summary>
 记录Visio绘图中所有开挖分块的形状的ID值及每一个分块的完成日期的两个数组，
 这两个数组的元素个数必须相同。
 </summary>
	<remarks></remarks>
</member><member name="E:AME.ClsData_DataBase.dic_IDtoElevationAndDataChanged">
	<summary>
 在DataBase中的表示剖面标高的基坑ID属性被整体修改赋值时触发。
 </summary>
	<param name="dic_Data"></param>
	<remarks></remarks>
</member><member name="E:AME.ClsData_DataBase.ProcessRangeChanged">
	<summary>
 在DataBase中的表示基坑属的施工进度属性被整体修改赋值时触发。
 </summary>
	<param name="ProcessRange"></param>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstRowNum_EndRowInElevation">
	<summary>
 工作表“剖面标高”中记录标高值的最后一行的行号，包括这一行
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstRowNum_ExcavTag">
	<summary>
 每个工作表对应的基坑的地块名称（如：A1、B、C1等）
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstRowNum_ExcavPosition">
	<summary>
 进度工作表中每一个基坑区域的标签
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstRowNum_ExcavIDInProgress">
	<summary>
 记录基坑ID的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstRowNum_TheFirstDay">
	<summary>
 第一个日期所在的行号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstColNum_DateList">
	<summary>
 记录施工进度日期的数据列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.cstColNum_theFirstRegionInProgress">
	<summary>
 记录的第一个基坑区域的列号
 </summary>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.F_shtElevation">
	<summary>
 数据库中的剖面标高工作表
 </summary>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.Sheet_Elevation">
	<summary>
 数据库中的剖面标高工作表
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.F_shtRegion">
	<summary>
 工作表：开挖分块
 </summary>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.sheet_Region">
	<summary>
 工作表：开挖分块
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.sheet_Points_Coordinates">
	<summary>
 工作表：监测点编号与对应坐标(在CAD中的坐标)
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.F_dic_IDtoElevationAndData">
	<summary>
 以基坑的ID来索引[此基坑的标高项目,对应的标高]的数组
 </summary>
	<remarks>返回一个字典，其key为"基坑的ID"，value为[此基坑的标高项目,对应的标高]的数组</remarks>
</member><member name="P:AME.ClsData_DataBase.ID_ElevationAndData">
	<summary>
 以基坑的ID来索引[此基坑的标高项目,对应的标高]的数组
 </summary>
	<value></value>
	<returns>返回一个字典，其key为"基坑的ID"，value为[此基坑的标高项目,对应的标高]的数组</returns>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.P_lst_ProcessRange">
	<summary>
 整个工程项目中的所有的基坑区域的集合
 </summary>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.ProcessRange">
	<summary>
 整个工程项目中的所有的基坑区域的集合，其中包含了与此基坑区域相关的各种信息，比如区域名称，区域数据的Range对象，区域所属的基坑ID及其ID的数据等
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.ClsData_DataBase.F_ShapeIDAndFinishedDate">
	<summary>
 工作表“开挖分块”中的“形状名”与“完成日期”两列的数据
 </summary>
	<remarks></remarks>
</member><member name="P:AME.ClsData_DataBase.ShapeIDAndFinishedDate">
	<summary>
 工作表“开挖分块”中的“形状名”与“完成日期”两列的数据
 </summary>
	<value></value>
	<returns>返回一个数组，数组中有两个元素，其中每一个元素都是以向量的形式记录了这两列数据。</returns>
	<remarks>向量的第一个元素的下标值为0。</remarks>
</member><member name="M:AME.ClsData_DataBase.#ctor(AME.FileContents)">
	<summary>
 构造函数
 </summary>
	<param name="FileContents">根据项目文件来提取相应的工作簿和工作表对象</param>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.ExtractElevation(Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 创建字典：dic_IDtoElevationAndData
 </summary>
	<param name="shtElevation"></param>
	<returns> 创建一个字典，以基坑的ID来索引[此基坑的标高项目,对应的标高]的数组
 其key为"基坑的ID"，value为[此基坑的标高项目,对应的标高]的数组</returns>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.ColNumToarrItemAndData(System.Int32,System.Single@,System.Single@)">
	<summary>
 由基坑ID所在的列号返回此基坑ID对应的每一个构件项目的名称与标高
 </summary>
	<param name="firstCellColNum">第一个单元格的列号，即为此基坑ID下的结构构件数据所在的列</param>
	<param name="ExcavationBottom">作为输出变量，表示基坑底的标高</param>
	<param name="BottomFloor">作为输出变量，表示底板顶的标高</param>
	<returns>数组中的第一列表示构件项目的名称，第二列表示构件项目的标高值</returns>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.GetDataForProcessRegion(System.Collections.Generic.List{Microsoft.Office.Interop.Excel.Worksheet})">
	<summary>
 施工进度工作表的操作：创建字典dicExcavTagToColRange，并获取5个基坑的时间跨度
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.ClsData_DataBase.GetShapeID_FinishedDatePair(Microsoft.Office.Interop.Excel.Worksheet)">
	<summary>
 获取工作表“开挖分块”中的“形状名”与“完成日期”的组合。 
 </summary>
	<param name="shtRegion">开挖分块工作表</param>
	<returns></returns>
	<remarks>数组的第一个元素的下标值为0</remarks>
</member><member name="T:AME.ClsData_DataBase">
	<summary>
 最原始的数据库类
 </summary>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.GlbApp">
	<summary>
 全局的主程序
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.MainForm">
	<summary>
 共享属性，用来索引启动窗口对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks>这一操作并不多余，对于多线程操作，有可能会出现在其他线程不能正确地
 调用到这个唯一的主程序对象，此时可以用这个属性来返回其实例对象。</remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frmRolling">
	<summary>
 图形滚动窗口
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.Form_Rolling">
	<summary>
 图形滚动窗口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frmSectionView">
	<summary>
 生成剖面标高图窗口
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.Form_SectionalView">
	<summary>
 生成剖面标高图窗口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frmMnt_Incline">
	<summary>
 绘制测斜曲线的窗口
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.Form_Mnt_Incline">
	<summary>
 绘制测斜曲线的窗口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frmMnt_Others">
	<summary>
 绘制其他监测曲线的窗口
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.Form_Mnt_Others">
	<summary>
 绘制其他监测曲线的窗口
 </summary>
	<value></value>
	<remarks>从此窗口中可以生成非测斜曲线的其他曲线，并且包括其时间分布与空间分布的形式</remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frmProjectFile">
	<summary>
 对项目文件进行操作的窗口
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.Form_ProjectFile">
	<summary>
 对项目文件进行操作的窗口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frmVisioPlanView">
	<summary>
 打开Visio的开挖平面图的窗口
 </summary>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.Form_VisioPlanView">
	<summary>
 打开Visio的开挖平面图的窗口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.GlobalApp_Form.APPLICATION_MAINFORM.DrawingWindowChanged">
	<summary>
 布尔值，用来指示主程序中的绘图窗口是否有新添加的，或者是否被关闭
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.#ctor">
	<summary>
 构造函数
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.myDefaltSettings">
	<summary>
 程序的一些属性的初始值的设置，这些属性是与UI线程无关的属性，以在新的非UI线程中进行设置。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.mainForm_Load(System.Object,System.EventArgs)">
	<summary>
 主程序加载
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>在主程序界面加载时，先启动Splash Screen，再为关键字段赋值，
 然后用一个伪窗口作为主程序界面的背景，最后关闭Splash Screen窗口。</remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.GetPath">
	<summary>
 获取与文件或文件夹路径有关的数据,并保存在My.Settings中
 </summary>
	<remarks>用来保证程序在不同机器或文件夹间迁移时能够正常索引</remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.mainForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
	<summary>
 退出主程序
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks>
 这里用FormClosing事件来控制主程序的退出，而不用Dispose事件来控制，
 是为了解决其子窗口在各自的FormClosing事件中只是将其进行隐藏并取消了默认的关闭操作，
 所以这里在主程序最先触发的FormClosing事件中就直接执行Me.Dispose()方法，这样就可以
 跳过子窗口的FormClosing事件，而直接退出主程序了。
 </remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.QuitDrawingApplications(AME.GlobalApp_Form.AmeDrawings)">
	<summary>
 关闭程序中的所有绘图所在的程序，如Excel或者Visio的程序
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItemExit_Click(System.Object,System.EventArgs)">
	<summary>
 退出程序
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.ChildrenFormAlligment_Horizontal(System.Object,System.EventArgs)">
	<summary>
 子窗口水平排列
 </summary>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.ChildrenFormAlligment_Vertical(System.Object,System.EventArgs)">
	<summary>
 子窗口竖直排列
 </summary>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.ChildrenFormAlligment_Cascade(System.Object,System.EventArgs)">
	<summary>
 子窗口层叠
 </summary>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItemSectionalView_Click(System.Object,System.EventArgs)">
	<summary>
 生成剖面标高图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.ShowForm_DrawingVisioPlanView(System.Object,System.EventArgs)">
	<summary>
 生成Visio的平面开挖图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItemDataMonitored_Click(System.Object,System.EventArgs)">
	<summary>
 生成测斜曲线图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItemOtherCurves_Click(System.Object,System.EventArgs)">
	<summary>
 生成其他监测数据曲线图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.StartRolling(System.Object,System.EventArgs)">
	<summary>
 执行Rolling操作，以进行窗口的同步滚动
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="F:AME.GlobalApp_Form.APPLICATION_MAINFORM.frm_Output_Word">
	<summary>
 将最终结果输出的Word中的窗口对象
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.ExportToWord(System.Object,System.EventArgs)">
	<summary>
 将最终结果输出的Word中的
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.NewProjectFile">
	<summary>
 新建项目文件
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.OpenProjectFile(System.String)">
	<summary>
 打开项目文件
 </summary>
	<param name="FilePath">打开的文件的文件路径（此文件已经确定为项目后缀的文件）</param>
	<remarks>单纯的打开项目文件并不要求打开操作项目文件的窗口</remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.OpenFile(System.String)">
	<summary>
 在工作者线程中执行具体的打开文件的工作
 </summary>
	<param name="FilePath"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.EditProjectFile">
	<summary>
 编辑项目文件
 </summary>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItem_SaveProject_Click(System.Object,System.EventArgs)">
	<summary>
 保存项目文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItem_CloseProject_Click(System.Object,System.EventArgs)">
	<summary>
 关闭项目文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItem_SaveAsProject_Click(System.Object,System.EventArgs)">
	<summary>
 另存为项目文件
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.GlobalApp_Form.APPLICATION_MAINFORM.MenuItemDrawingPoints_Click(System.Object,System.EventArgs)">
	<summary>
 在Visio平面图中绘制监测点位图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="T:AME.GlobalApp_Form.APPLICATION_MAINFORM">
	<summary>
 程序的主界面
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.myDataGridView_RowsNumberChanged(System.Object,System.Object)">
	<summary>
 行数改变时的事件：显示行号
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.RowsResizable(System.Object,System.Windows.Forms.DataGridViewRowsAddedEventArgs)">
	<summary>
 设置新添加的一行的Resizable属性为False
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.InsertRow(System.Object,System.EventArgs)">
	<summary>
 插入一行
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.RemoveRow(System.Object,System.EventArgs)">
	<summary>
 移除一行
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.ToolStripMenuItemRemoveRows_Click(System.Object,System.EventArgs)">
	<summary>
 移除多行
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.myDataGridView_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
	<summary>
 如下按下Ctrl+V，则将表格中的数据粘贴到DataGridView控件中
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.myDataGridView.PasteFromTable">
	<summary>
 将表格中的数据粘贴到DataGridView控件中
 </summary>
	<remarks></remarks>
</member><member name="T:AME.AME_UserControl.myDataGridView">
	<summary>
 自定义控件：DataGridView，向其中增加了：插入行、删除行、显示行号等功能
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.ShapeName_OverView">
	<summary>
 visio中包含两个定位点的组合形状的形状名
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.ShapeName_MonitorPointTag">
	<summary>
 visio中在监测点的主控形状中，用来显示测点编号的形状的Name属性。
 </summary>
	<remarks>在表示监测点位的主控形状的模板中，每一个监测点位的主控形状中，
 都有一个子形状，其Name属性为Tag，以此来索引此文本形状。</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.pt_Visio_BottomLeft_ShapeName">
	<summary>
 Visio平面图中用于坐标变换的两个定位点的形状ID，
 这两个点分别代表ABCD基坑群的左下角与右上角。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.pt_Visio_UpRight_ShapeName">
	<summary>
 Visio平面图中用于坐标变换的两个定位点的形状ID，
 这两个点分别代表ABCD基坑群的左下角与右上角。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.pt_CAD_BottomLeft">
	<summary>
 CAD平面图中用于坐标变换的两个定位点的坐标，这两个点分别代表ABCD基坑群的左下角与右上角。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.pt_CAD_UpRight">
	<summary>
 CAD平面图中用于坐标变换的两个定位点的坐标，这两个点分别代表ABCD基坑群的左下角与右上角。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation.#ctor(System.String,System.String,System.String,System.String,System.Drawing.PointF,System.Drawing.PointF)">
	<summary>
 构造函数
 </summary>
	<param name="ShapeName_OverView"></param>
	<param name="ShapeName_MonitorPointTag"></param>
	<param name="pt_Visio_BottomLeft_ShapeName"></param>
	<param name="pt_Visio_UpRight_ShapeName"></param>
	<param name="pt_CAD_BottomLeft"></param>
	<param name="pt_CAD_UpRight"></param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation">
	<summary>
 Visio平面图中，与监测点位相关的信息（不是开挖平面），用来在Visio平面图中绘制测点。
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.P_Application">
	<summary>
 Visio程序界面
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Application">
	<summary>
 Visio程序界面
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.P_Page">
	<summary>
 进行绘画的那一个页面
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Page">
	<summary>
 进行绘画的那一个页面
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.P_Name">
	<summary>
 此绘图画面的标签，用来进行索引
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Name">
	<summary>
 此绘图画面的标签，用来进行索引
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.P_ShapeID_FinishedDate">
	<summary>
 工作表“开挖分块”中的“形状名”与“完成日期”两列的数据，
 其中分别以向量的形式记录了这两列数据。向量的第一个元素的下标值为0
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.ShapeID_FinishedDate">
	<summary>
 工作表“开挖分块”中的“形状名”与“完成日期”两列的数据，
 其中分别以向量的形式记录了这两列数据。向量的第一个元素的下标值为0
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.DateSpan">
	<summary>
 进行同步滚动的时间跨度，用来给出时间滚动条与日历的范围。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Type">
	<summary>
 此图表所属的类型，由枚举DrawingType提供
 </summary>
	<value></value>
	<returns>DrawingType枚举类型，指示此图形所属的类型</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.UniqueID">
	<summary>
 图表的全局独立ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks>以当时时间的Tick属性来定义</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.P_HasMonitorPointsInfo">
	<summary>
 此Visio平面图中是否可以用来绘制监测点位的信息
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.HasMonitorPointsInfo">
	<summary>
 此Visio平面图中是否可以用来绘制监测点位的信息
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.P_MonitorPointsInfo">
	<summary>
 Visio平面图中，与监测点位相关的信息（不是开挖平面），用来在Visio平面图中绘制测点。
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInfo">
	<summary>
 Visio平面图中，与监测点位相关的信息（不是开挖平面），用来在Visio平面图中绘制测点。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.F_BackgroundWorker">
	<summary>
 后台工作线程
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.F_PageName_PlanView">
	<summary>
 开挖平面图在Visio中的页面名称
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.F_LayerName_Visible">
	<summary>
 用来显示开挖分块对象的形状的图层名
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.F_LayerName_InVisible">
	<summary>
 用来隐藏开挖分块对象的形状的图层名
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.F_ShapeID_AllRegions">
	<summary>
 所有分区的组合形状的ID值
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.F_InfoBoxID">
	<summary>
 记录开挖信息的文本框
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.shps">
	<summary>
 绘图页面中的“所有形状”的集合
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_PlanView.layerVisible">
	<summary>
 图层：“显示”
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.#ctor(System.String,AME.All_Drawings_In_Application.DrawingType,System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation)">
	<summary>
 构造函数
 </summary>
	<param name="strFilePath">要打开的Visio文档的绝对路径</param>
	<param name="type">Visio平面图所属的绘图类型</param>
	<param name="PageName_PlanView">开挖平面图在Visio中的页面名称</param>
	<param name="LayerName_Visible">用来显示开挖分块对象的形状的图层名</param>
	<param name="LayerName_InVisible">用来隐藏开挖分块对象的形状的图层名</param>
	<param name="ShapeID_AllRegions">所有分区的组合形状的ID值</param>
	<param name="InfoBoxID">记录开挖信息的文本框</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.NewVsoApp">
	<summary>
 创建一个新的Visio.Application对象
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.OpenDocument(Microsoft.Office.Interop.Visio.Application,System.String)">
	<summary>
 打开一个Visio文档
 </summary>
	<param name="vsoApp"></param>
	<param name="FilePath">文档的绝对路径</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.GetAndRefreshDateSpan(System.DateTime[])">
	<summary>
 获取此文档所对应的施工日期跨度
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.GenerateReference(Microsoft.Office.Interop.Visio.Page,Microsoft.Office.Interop.Visio.Shapes@,Microsoft.Office.Interop.Visio.Layer@)">
	<summary>
 ！创建索引，将变量索引到Visio中的形状集合与相应图层。
 </summary>
	<param name="DrawingPage"></param>
	<param name="shapes">页面中的所有形状的集合</param>
	<param name="layerVisible">页面中用来放置“显示”的对象的图层</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.VsoApplicationBeauty(Microsoft.Office.Interop.Visio.Application,Microsoft.Office.Interop.Visio.Document)">
	<summary>
 进行Visio界面的美化
 </summary>
	<param name="VsoApp"></param>
	<param name="vsoDoc">进行美化时,要先打开Visio文档,如果没有打开任何文档,
 则Application的ActiveDocument与ActiveWindow属性会返回Nothing.</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Rolling(System.DateTime)">
	<summary>
 图形滚动
 </summary>
	<param name="dateThisDay"></param>
	<remarks>在Visio中的数据记录集上，用来控制形状的显示与否的，
 就只有“形状ID”与“完成日期”这两列的数据。</remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Application_Quit(Microsoft.Office.Interop.Visio.Application)">
	<summary>
 绘图界面被删除时引发的事件
 </summary>
	<param name="app"></param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_PlanView.Close(System.Boolean)">
	<summary>
 关闭绘图的Visio文档以及其所在的Application程序
 </summary>
	<param name="SaveChanges">在关闭文档时是否保存修改的内容</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_PlanView">
	<summary>
 Visio的开挖平面图
 </summary>
	<remarks></remarks>
</member><member name="F:AME.AME_UserControl.PictureBox_AutoRoll._RollingImage">
	<summary>
 要进行滚动旋转的Image对象
 </summary>
	<remarks></remarks>
</member><member name="P:AME.AME_UserControl.PictureBox_AutoRoll.RollingImage">
	<summary>
 要进行滚动旋转的Image对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.AME_UserControl.PictureBox_AutoRoll.Interval">
	<summary>
 Gets or sets the time, in milliseconds, 
 before the Tick event is raised relative to the last occurrence of the Tick event.
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.AME_UserControl.PictureBox_AutoRoll.RollingAngle">
	<summary>
 每一次旋转的增量角，以度来表示。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.AME_UserControl.PictureBox_AutoRoll.Timer_ProcessRing">
	<summary>
 对图形进行滚动旋转的定时触发器
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.PictureBox_AutoRoll.StartRolling">
	<summary>
 开始将图形进行旋转，在应用此方法前，
 请务必先为控件的Image属性赋值，即指定要进行旋转的图形对象。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.AME_UserControl.PictureBox_AutoRoll.StopRolling">
	<summary>
 停止图形的旋转
 </summary>
	<remarks></remarks>
</member><member name="T:AME.AME_UserControl.PictureBox_AutoRoll">
	<summary>
 自定义控件，用来对于PictureBox中的图片进行中心旋转
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SeriesTag.series">
	<summary>
 数据系列的series对象
 </summary>
 数据列对象

</member><member name="P:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SeriesTag.ConstructionDate">
	<summary>
 进行滚动的施工日期
 </summary>
 对应的施工日期

</member><member name="T:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SeriesTag">
	<summary>
 数据列series对象所对应的一些信息对象
 </summary>
	<remarks>它包括每一条数据系列的对象，及其对应的日期、开挖深度的标志线、记录开挖深度值的文本框</remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.LegendLocation.Legend_Height">
	<summary>
 图例框的高度
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.LegendLocation.Legend_Width">
	<summary>
 图例框的宽度
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.LegendLocation.#ctor(System.Single,System.Single)">
	<summary>
 构造函数
 </summary>
	<param name="LegendHeight">图例框的高度</param>
	<param name="LegendWidth">图例框的宽度</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.LegendLocation">
	<summary>
 图例框的尺寸与位置，用来在进行监测数据曲线的滚动时设置图例的大小与位置
 </summary>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.cst_LboundOfSeriesInCollection">
	<summary>
 数据列在集合seriesCollection中的第一个元素的下标值
 </summary>
	<remarks>office2010的dll中，其值为1（2014.11.13注）</remarks>
</member><member name="P:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.ChartSize_sugested">
	<summary>
 此结构有四个元素，分别代表：画布的高度、宽度；由画布边界扩展到Excel界面的尺寸的高度和宽度的增量
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.F_dicSreies_Tag">
	<summary>
 用数据列的ID属性来索引对应的数据列，以及与之相关的Tag数据
 </summary>
	<remarks>作为关键字的ID值并不是以0为初始值的，
 而是在series在seriescollection中的序号值来定义的。</remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.F_list_HasCurve">
	<summary>
 记录图表中所有的数据系列中的每一项是否有曲线图
 </summary>
	<remarks>由此来确定数据曲线是要放在哪一个系列中，
 以及图例项中要删除哪些或者显示哪些项。
 此列表中的元素的个数始终等于图表中定义的数据系列的个数，即seriesCollection.Count的值</remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.F_seriesColle">
	<summary>
 图表中的数据列集合
 </summary>
	<remarks>它就等效于Me.Chart.SeriesCollection</remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.F_CurvesCount">
	<summary>
 图表中所包含的数据曲线的数量
 </summary>
	<remarks>由于制作模板的问题，所以SeriesCount指的是图表中的显示出来的监测曲线的数量，
 而seriesCollection.Count指的是图表中定义的数据系列的数量。
 空白系列会包含在seriesCollection.Count中，而在图表中并没有曲线图，因为没有数据。</remarks>
</member><member name="F:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.F_movingSeries">
	<summary>
 用来进行滚动的那一个数据列对象
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.DateSpan">
	<summary>
 进行同步滚动的时间跨度，用来给出时间滚动条与日历的范围。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.Legend_Location">
	<summary>
 图例框的尺寸与位置
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.#ctor(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Chart,AME.All_Drawings_In_Application.Cls_ExcelForMonitorDrawing,AME.All_Drawings_In_Application.DrawingType,System.Boolean,AME.Miscellaneous.DateSpan,AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SeriesTag)">
	<summary>
 构造函数
 </summary>
	<param name="DataSheet">图表对应的数据工作表</param>
	<param name="DrawingChart">Excel图形所在的Chart对象</param>
	<param name="ParentApp">此图表所在的Excel类的实例对象</param>
	<param name="type">此图表所属的类型，由枚举drawingtype提供</param>
	<param name="CanRoll">是图表是否可以滚动，即是动态图还是静态图</param>
	<param name="DateSpan">此图表的TimeSpan跨度</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.Rolling(System.DateTime)">
	<summary>
 日期滚动时的Rolling方法
 </summary>
	<param name="dateThisday">当天的日期</param>
	<remarks>在基类中，并不给出此方法的实现，而由其子类去进行重写</remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.GetClosestDay(System.Collections.Generic.SortedSet{System.DateTime},System.DateTime)">
	<summary>
 根据所有的日期集合和当天的日期，得到距当天最近的那天的日期。
 </summary>
	<param name="sortedlist_AllDays">有监测数据的所有的日期集合。</param>
	<param name="dateThisDay">想要进行绘图的那一天的日期。</param>
	<returns>在集合中距离当天最近的那一天。</returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SeriesChange(System.Int32,System.Int32,System.Int32,System.Boolean@)">
	<summary>
 当在数据列上双击时执行相应的操作
 </summary>
	<param name="ElementID">在图表上双击击中的对象</param>
	<param name="Arg1"></param>
	<param name="Arg2"></param>
	<param name="Cancel"></param>
	<remarks>要么将其删除，要么将其锁定在图表中，要么什么都不做</remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.DeleteSeries(System.Int32)">
	<summary>
 移除指定的数据列及其依附的对象
 </summary>
	<param name="DeletingSeriesIndex">要进行删除的数据列在集合中的索引下标值</param>
	<remarks>为了保存模板中的数据系列的格式，这里的删除并不是将数据列进行了真正的删除，而是将数据列的数据设置为空。
 这样的话，后期的数据曲线应该加载在最靠前而且没有数据的数据列中。</remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.CopySeries(System.Int32)">
	<summary>
 由指定的数据列复制出一个新的数据列来，并在图表中显示
 </summary>
	<param name="SourceSeriesIndex">用来进行复制的原始数据列对象在集合中的下标值</param>
	<remarks>此方法主要完成两步操作：
 1.在Excel图表中对数据列及其对应的对象进行复制；
 2.在字典索引dicSreies_Tag中新添加一项；
 </remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.AddSeries(System.Int32@)">
	<summary>
 添加新的数据系列对象
 </summary>
	<param name="NewSeriesIndex">新添加的数据曲线在集合中的下标值</param>
	<returns>一条新的数据曲线</returns>
	<remarks>此函数只创建出对于新的数据曲线的对象索引，以及设置曲线的UI样式，
 并不涉及对于数据曲线的坐标点的赋值</remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.LegendRefresh(System.Collections.Generic.List{System.Boolean})">
	<summary>
 更新图例
 </summary>
	<param name="lst"></param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase.SetLegendFormat(Microsoft.Office.Interop.Excel.Chart,Microsoft.Office.Interop.Excel.Legend)">
	<summary>
 设置图例对象的UI格式：图例方框的线型、背景、位置与大小等
 </summary>
	<param name="chart">图例对象所属的Chart对象</param>
	<param name="legend">要进行UI格式设置的图例对象</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.clsDrawing_Mnt_RollingBase">
	<summary>
 用Excel绘制的，可以进行数据曲线的滚动的类型
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.Rectangle">
	<summary>
 此基坑区域在绘图中的矩形
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.LineAndTextbox">
	<summary>
 在剖面标高图中，用来进行标识的每一条直线和对应的文本框
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.Depth">
	<summary>
 基坑区域的当天的开挖深度，用其对应的深度的标高值来表示
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.TopReference">
	<summary>
 基坑区域的矩形顶部的基准高度，以磅为单位，它对应的开挖标高为矩形最顶部的标高（不一定是自然地坪标高）
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.ExcavationRegion">
	<summary>
 基坑区域所对应的各种数据信息
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.#ctor(AME.ClsData_DataBase.clsProcessRegionData,Microsoft.Office.Interop.Excel.Shape,System.Collections.Generic.Dictionary{System.Single,AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox},System.Single,System.Single)">
	<summary>
 构造函数
 </summary>
	<param name="ExcavationRegion">基坑区域所对应的各种数据信息</param>
	<param name="Rectangle">此基坑区域在绘图中的矩形</param>
	<param name="LineAndTextbox">在剖面标高图中，用来进行标识的每一条直线和对应的文本框</param>
	<param name="depth">基坑区域的当天的开挖深度，用其对应的深度的标高值来表示</param>
	<param name="topreference">基坑区域的矩形顶部的基准高度，以磅为单位，它对应的开挖标高为矩形最顶部的标高（不一定是自然地坪标高）</param>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox.Identifier">
	<summary>
 直线的标识，如：支撑、基坑底
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox.Elevation">
	<summary>
 构件项目的标高
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox.line">
	<summary>
 直线的line对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox.TextBox">
	<summary>
 文本框的textbox对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox.Text">
	<summary>
 文本框中的文本
 </summary>
	<value></value>
	<returns>在设置Text属性时也同时更新了文本框中的文本</returns>
	<remarks>也可以用文本框的shape对象.TextFrame2.TextRange.Text属性来表示</remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox.#ctor(System.String,System.Single,Microsoft.Office.Interop.Excel.Shape,Microsoft.Office.Interop.Excel.Shape,System.String)">
	<summary>
 构造函数，在创建实例时会对其中的直线与文本框的格式进行设置
 </summary>
	<param name="identifier">直线的标识，如：支撑、基坑底</param>
	<param name="elevation">构件项目的标高</param>
	<param name="line">直线的line对象</param>
	<param name="textbox">文本框的textbox对象</param>
	<param name="Description">对于此构件的描述</param>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion.line_Textbox">
	<summary>
 在剖面标高图中，用来进行标识的每一条直线和对应的文本框
 </summary>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion">
	<summary>
 在开挖剖面图中的每一个基坑开挖区域，其中包含了此基坑区域的矩形、
 关键构件的直线与文本框、以及与此基坑区域相关的其他数据信息
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Application">
	<summary>
 进行绘图的Excel程序
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Elevation.P_Sheet_Drawing">
	<summary>
 进行绘图的工作表
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Sheet_Drawing">
	<summary>
 进行绘图的工作表
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Elevation.P_Chart">
	<summary>
 进行绘图的Chart对象
 </summary>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Chart">
	<summary>
 进行绘图的Chart对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.ConstructionDate">
	<summary>
 一个文本框，用来记录任意一天的施工日期
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.DateSpan">
	<summary>
 进行同步滚动的时间跨度，用来给出时间滚动条与日历的范围。
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.dicRangeAndRegion">
	<summary>
 以选择的"基坑区域的Range"为关键字，去索引此基坑区域的相关信息，包含基坑区域的矩形、关键构件的直线与文本框、以及其他的相关信息
 </summary>
	<value></value>
	<returns>字典中的关键字key所代表的每一个Range对象，
 都代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Type">
	<summary>
 此图表所属的类型，由枚举DrawingType提供
 </summary>
	<value></value>
	<returns>DrawingType枚举类型，指示此图形所属的类型</returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Name">
	<summary>
 此绘图画面的标签，用来进行索引
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.All_Drawings_In_Application.ClsDrawing_Elevation.UniqueID">
	<summary>
 图表的全局独立ID
 </summary>
	<value></value>
	<returns></returns>
	<remarks>以当时时间的Tick属性来定义</remarks>
</member><member name="F:AME.All_Drawings_In_Application.ClsDrawing_Elevation.F_ExcelProcess">
	<summary>
 Excel程序的进程对象，用来对此进程进行相差的操作，比如，关闭进程
 </summary>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.#ctor(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Excel.Chart,System.Collections.Generic.Dictionary{Microsoft.Office.Interop.Excel.Range,AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion},Microsoft.Office.Interop.Excel.TextFrame2,AME.All_Drawings_In_Application.DrawingType)">
	<summary>
 构造函数
 </summary>
	<param name="SectionalDrawingsheet">用于绘制剖面图的Excel工作表</param>
	<param name="DrawingChart">用于绘制剖面图的Excel的Chart对象</param>
	<param name="ChosenRangeAndRectg">此绘图中所包含的矩形方块与对应的数据范围</param>
	<param name="textbox">记录信息的文本框</param>
	<param name="type">此图表所属的类型，由枚举DrawingType提供</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Rolling(System.DateTime)">
	<summary>
 进行图形滚动
 </summary>
	<param name="dateThisDay">进行滚动的日期</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.GetDepth(Microsoft.Office.Interop.Excel.Range,System.DateTime)">
	<summary>
 由监测点所在基坑区域，以及当天的日期，来得到此点当日的开挖深度
 </summary>
	<param name="ExcavationRegion">考察点所在的基坑区域Region，其中每一个Range对象，
 都代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</param>
	<param name="dateThisday">考察的日期</param>
	<returns>此点当天的开挖深度</returns>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.DrawingNow(Microsoft.Office.Interop.Excel.Range,AME.All_Drawings_In_Application.ClsDrawing_Elevation.clsExcavationRegion,System.Single,System.Boolean)">
	<summary>
 对每一个基坑区域进行滚动绘图
 </summary>
	<param name="ExcavRegionInfo">要进行对比的开挖区域的信息</param>
	<param name="Range">要进行对比的开挖区域的Range对象,
 它代表工作表的UsedRange中这个区域的一整列的数据(包括前面几行的表头数据)</param>
	<param name="NewDepth">此开挖区域当天的开挖深度</param>
	<param name="blnFilling">指示当天是否已经挖到基坑底，如果是，则即使当天的深度高于某构件高度，
 此构件也要用实线显示，因为它已经施工完成了</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Close(System.Boolean)">
	<summary>
 关闭绘图的文档以及其所在的Application程序
 </summary>
	<param name="SaveChanges">在关闭文档时是否保存修改的内容</param>
	<remarks></remarks>
</member><member name="M:AME.All_Drawings_In_Application.ClsDrawing_Elevation.Application_Quit(Microsoft.Office.Interop.Excel.Workbook,System.Boolean@)">
	<summary>
 绘图界面被删除时引发的事件
 </summary>
	<remarks></remarks>
</member><member name="T:AME.All_Drawings_In_Application.ClsDrawing_Elevation">
	<summary>
 图表类：剖面标高图
 </summary>
	<remarks></remarks>
</member><member name="P:AME.AME_UserControl.UsrCtrl_NumberChanging.Value_TimeSpan">
	<summary>
 日期文本框上显示的用来进行日期值增减的数量
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.AME_UserControl.UsrCtrl_NumberChanging">
	<summary>
 用户控件，用来增加或减少指定的日期值。
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDrawingPlan.#ctor">
	<summary>
 构造函数
 </summary>
	<remarks></remarks>
</member><member name="M:AME.frmDrawingPlan.btnChooseVisioPlanView_Click(System.Object,System.EventArgs)">
	<summary>
 打开新的Visio的开挖平面图。如果平面图已经打开，则不能再打开新的平面图。
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawingPlan.ConstructVisioPlanView(System.Object,System.EventArgs)">
	<summary>
 生成开挖平面图
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawingPlan.ChkBx_PointInfo_CheckedChanged(System.Object,System.EventArgs)">
	<summary>
 启用或禁用监测点位信息的设置区域
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawingPlan.PointsInfoToUI(AME.All_Drawings_In_Application.ClsDrawing_PlanView.MonitorPointsInformation)">
	<summary>
 将监测点位信息的属性值显示在窗口界面中
 </summary>
	<param name="PointsInfo"></param>
	<remarks></remarks>
</member><member name="M:AME.frmDrawingPlan.UIToPointsInfo">
	<summary>
 根据窗口界面中输入的监测点位数据，来返回对应的结构体属性。
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:AME.frmDrawingPlan">
	<summary>
 绘制开挖平面图图的窗口界面
 </summary>
	<remarks></remarks>
</member><member name="F:AME.Diafrm_Output_Word.F_arrListBoxes">
	<summary>
 窗口中的所有列表框listbox对象
 </summary>
	<remarks>此数组是为了便于后面的统一操作：清空内容、全部选择，取消全选</remarks>
</member><member name="F:AME.Diafrm_Output_Word.WdApp">
	<summary>
 Word的Application对象
 </summary>
	<remarks></remarks>
</member><member name="P:AME.Diafrm_Output_Word.Application">
	<summary>
 Word的Application对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AME.Diafrm_Output_Word.Document">
	<summary>
 输出到的word.document对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.frm_Output_Word_Load(System.Object,System.EventArgs)">
	<summary>
 Showdialog式加载
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.ExposeDrawings(AME.GlobalApp_Form.GlobalApplication)">
	<summary>
 从主程序中提取所有的图表，以进行输出之用
 </summary>
	<param name="GlbApp">主程序对象</param>
	<remarks>在此方法中，将提取主程序中的所有图表对象，而且将其显示在输入窗口的列表框中</remarks>
</member><member name="M:AME.Diafrm_Output_Word.word_Quit(Microsoft.Office.Interop.Word.Document,System.Boolean@)">
	<summary>
 Word退出时，将对应的文档与word程序的变量设置为nothing
 </summary>
	<param name="docBeingClosed"></param>
	<param name="cancel"></param>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.Export_ExcelChart(Microsoft.Office.Interop.Excel.Chart,Microsoft.Office.Interop.Word.Range@)">
	<summary>
 导出excel中的chart对象到word中
 </summary>
	<param name="cht">excel中的chart对象</param>
	<param name="range">此时word文档中的全局range的位置或者范围</param>
	<remarks>由局部安全的原则，在进行绘图前，将另起一行，并将段落样式设置为“图片”样式</remarks>
</member><member name="M:AME.Diafrm_Output_Word.Export_ExcelSheet(Microsoft.Office.Interop.Excel.Worksheet,Microsoft.Office.Interop.Word.Range@)">
	<summary>
 导出excel的工作表中的所有形状到word中
 </summary>
	<param name="sheet">要进行粘贴的Excel中的工作表对象</param>
	<param name="range">此时word文档中的全局range的位置或者范围</param>
	<remarks>在此方法中，会将Excel的工作表中的所有形状进行选择，然后进行组合，最后将其输出到word中；
 由局部安全的原则，在进行绘图前，将另起一行，并将段落样式设置为“图片”样式</remarks>
</member><member name="M:AME.Diafrm_Output_Word.Export_VisioPlanview(Microsoft.Office.Interop.Visio.Page,Microsoft.Office.Interop.Word.Range@)">
	<summary>
 导出visio的Page中的所有形状到word中
 </summary>
	<param name="Page">要进行粘贴的Visio中的页面</param>
	<param name="range">此时word文档中的全局range的位置或者范围</param>
	<remarks>在此方法中，会将visio指定页面中的所有形状进行选择，然后进行组合，最后将其输出到word中；
 由局部安全的原则，在进行绘图前，将另起一行，并将段落样式设置为“图片”样式</remarks>
</member><member name="M:AME.Diafrm_Output_Word.btnExport_Click(System.Object,System.EventArgs)">
	<summary>
 将结果输出到word中
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.Export_OverView(Microsoft.Office.Interop.Word.Range@)">
	<summary>
 输出开头的一些概况信息
 </summary>
	<param name="Range"></param>
	<remarks>包括标题、施工日期，施工工况等</remarks>
</member><member name="M:AME.Diafrm_Output_Word.NewLine(Microsoft.Office.Interop.Word.Range@,System.String)">
	<summary>
 新起一段
 </summary>
	<param name="range">Range对象，可以为选区范围或者光标插入点</param>
	<param name="PrphStyle">新起一段的段落样式</param>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.WidthRestrain(System.Object,System.Single)">
	<summary>
 限制粘贴到word中的图形的宽度
 </summary>
	<param name="shape">粘贴过来的图形，可能为shape对象或者inlineshape对象</param>
	<param name="PageWidth_Content">用来限制图片宽度的值，一般取页面的正文版面的宽度值</param>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.GetContentWidth(Microsoft.Office.Interop.Word.Document)">
	<summary>
 获取word页面的正文范围的宽度，用来限定图片的宽度值
 </summary>
	<param name="doc"></param>
	<returns>word页面的正文范围的宽度，以磅为单位</returns>
	<remarks></remarks>
</member><member name="M:AME.Diafrm_Output_Word.ChkBxSelect_Click(System.Object,System.EventArgs)">
	<summary>
 对列表中的项目进行全选或者取消全部选择
 </summary>
	<param name="sender"></param>
	<param name="e"></param>
	<remarks></remarks>
</member>
</members>
</doc>